(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory((function webpackLoadOptionalExternalModule() { try { return require("sharp"); } catch(e) {} }()), (function webpackLoadOptionalExternalModule() { try { return require("canvas"); } catch(e) {} }()), (function webpackLoadOptionalExternalModule() { try { return require("electron/common"); } catch(e) {} }()));
	else if(typeof define === 'function' && define.amd)
		define(["sharp", "canvas", "electron/common"], factory);
	else if(typeof exports === 'object')
		exports["TestApp"] = factory((function webpackLoadOptionalExternalModule() { try { return require("sharp"); } catch(e) {} }()), (function webpackLoadOptionalExternalModule() { try { return require("canvas"); } catch(e) {} }()), (function webpackLoadOptionalExternalModule() { try { return require("electron/common"); } catch(e) {} }()));
	else
		root["TestApp"] = factory(root["sharp"], root["canvas"], root["electron/common"]);
})(self, (__WEBPACK_EXTERNAL_MODULE_sharp__, __WEBPACK_EXTERNAL_MODULE_canvas__, __WEBPACK_EXTERNAL_MODULE_electron_common__) => {
return /******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./images/data/bank/OS3_disabled_preset.data.png":
/*!*******************************************************!*\
  !*** ./images/data/bank/OS3_disabled_preset.data.png ***!
  \*******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports=(__webpack_require__(/*! alt1/base */ "../node_modules/alt1/dist/base/index.js").ImageDetect).imageDataFromBase64("iVBORw0KGgoAAAANSUhEUgAAAB4AAAAeCAYAAAA7MK6iAAABhG5visiSAAAAAZub1BFAAAAAAAA7Gu72AAAAAlub1BFAAAAAAAAAAAAoYpy1QAAAAdub1BFAAAAAAAAAFrm3tAAAAAZbm9QRQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAzWlrwAAAA30lEQVRIx+1XvwuCQBh9ZweV6y1x4JFLow0htPW3twXSkGOL4CASuDRog3oNEtlgktJpcW99cO/e973vfpClbUkACKMEKiA4AwDQh+hu6ygR3h98CM5AjKkp3fUKKuGdzpVjcz5Dmt1QFuVnKxACSNnMAS/8Nc2Q58Wz1J3RJNrGATAwEAYTfltq7+iTPou7G0fqUutwfQ+E6FL/e48bzmzdYz3HP+y4Idm06306/nCNbY5p74TWHdX5llcmBYDokqhzSifVHpe2JcMogS0WSoSDMIbgrHIsOEMQxko/bXfS8T+BnL6JXgAAAABJRU5ErkJggg==")

/***/ }),

/***/ "./images/data/bank/OS3_presets.data.png":
/*!***********************************************!*\
  !*** ./images/data/bank/OS3_presets.data.png ***!
  \***********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports=(__webpack_require__(/*! alt1/base */ "../node_modules/alt1/dist/base/index.js").ImageDetect).imageDataFromBase64("iVBORw0KGgoAAAANSUhEUgAAANUAAABECAYAAAAWenBlAAABhG5visiSAAAAAZub1BFAAAAAAAA7Gu72AAAAAlub1BFAAAAAAAAAAAAoYpy1QAAAAdub1BFAAAAAAAAAFrm3tAAAAAZbm9QRQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAzWlrwAAAGcElEQVR42u3dXUxTZxgH8H8/gFagrnSb0ZjMLUxIxKgbRpxDNHJhHGPxbjdTLzTLkrkPsyXLvJi7IFmyxCXbxT5clk2vSJbMse4jA6Kl2wIBJgZk4JxMoxA/oKMt7WnPOT27qD2eAxRoe1oL/H+JST3vOZw3TR+e53nf0preev2gAgCCEAEA2GxFIKL0WQHgu+/P85kgMsD+F3bBmshQe596CCb7SgDAlMkKJRAEAIRkGSssFoRkWXfxCouF4xxfluOJsZISm3pMCU/ilz//i2eqRLl3J2rFhA8oMAUwFQjzVw7RvPwoLrVDVEpRVmzVl38AEAjFEA3eRnTaZR3dQ6YHMd2dWysVzoFzyNc5JMQTUBgBk109ZhaECCRJgiU0yV88RGnSVnfmRPnnlwv5zBBlQJKkeFAlDjgsUT4rRGnSxo85sfrHTEWUvkT8CEKEmYrIaObpkUZEBgUVERkcVCz/iNKnW6hg+UfETEXEnopoqdNWeiz/iFj+ES2SoGKmImJPRcTyj2ip4j4VETMVEXsqomWF+1RELP+IFmFQMVMRsaciYvlHtFRxn4qImYqIPRXRssJ9KiKWf0SLh+nVl19UfvjRi8dWl/LZIMrAtbEAnn+ulj0VEcs/ojzEfSqiLLJqI222wOI353EOs32DYEf3cI7uXZF0LB/mMGdQES1UR/cwTrz5Uk7udeKjM7O+qPNhDlrxhBTRBxXLP1poQB091IhxX26+zvbooUZ88nWL7kWdD3PIqPwjms7lXIlx3ySiUSml60xmE5SYknQMgG785t1xCOFI3s5h3qBiQFG2JXsxzze22ObAnoqWhSuXO3X/L19fk7V7sfwjQ/R3tauPN27bk7NrU3Hy2CYAwLGTFw3/2dp9KpZ/ZBhv7xnExlpR13A6peDw9p6BNNKMrfvdhmel+TJSKucyU1HOxcZaERMm4HEfQF3D6QVnnthYKwbNfsMCqnHnauyqfhTne26jpSMeNLVbXOo5tVtc8F6IH59+rhGBxZ6KDGWKjUIJjcLjPoCpsTvYd+TnrJZ0s9mxyQlRFLFjkxMbKx1wldggiiJEUQQANDy7Cvt3r8V4UICjyKKe29IxlvY9tftUfJsSZYUSGoDdaYHHfQD9Xe26vinbfr/ogyLJUCRZDRrd3CQZ0XA8oLTXcKGC8q/8EyZgSiNrxYQJ2IOiIXMoX1+Dlo5OVKwrhKvYBkWSEZCBpi/0b2n64JUKKJIMABifEtDSMWZ8T8WAIkMEhZlZK9gDu/OJBfVaiQ3YTD28slgXUNMD5p1PO9F05HFYrPHgM3IO7KkoN72W/yoU/1Wc+7YBYZ9seK+lXcWr3eKCJIQBAE2nRmbNQOXra3D8VDywpi9eAMCTldtZ/tGDF/bJKIzO05uEe7HC7sSHH2/A26+1Y+O2PQj7ZIyHM1/9SwRIOvZWO7C32gEAOH5qJOXruU9F2an8rk8Cobn/2HW4wIX2K4C7+RK2P7NHvU4QM++pZFnO6XXMVPRADRe40P/IKnz1hhcA1ICa0X+l+f47KRrBu5/9DQDYVuVAY02Zenyua6RIvAds6ZxA14A/43mwpyLDjV6dmXEuVK3Gtb8scDd5kwYTbmT2cSmVVXXq464BjxpUTYfX4fiXHt04AAwNeNB0eF08U6IQXQP+Geekgn9PRTkRKF6DdsEM94nBObPTsHgXRn+uq0+IwGkr0gWWrv+6F1AAIAoBln+UpyXeyAQSH3R31rIW1/4Jof+3f5NnJ02WGho1ZvN1aMCD+moHSi0mSOL9/u79g2tgLYi/viUxqhtz2opQX+1AW48no2yVwHdUkKG6J+04a1kLd/PgwgJqGpPZpP5L1+7NZerj64H7ixDaYArIijomiVHUbigxbA7sqcgQQRkYGvXhj7Ad/c2DKQXT0KgPN8tcAG4ZMpdzfRPYXFmMvqEptPX41cWLfU/HA+en3qC6KFFf7VDPZflHeefz1ltz9k5zX3c/oDJZeausqkNbj0cNpkQ51zXgUYNKuygx27npzIH7VGS4VAPJqGuTBVbSxRNZWfC5zFS0JGTzsyre+2Y0J3NgT0XLQjYykpZun8p2by2fWYqMNtvqmTYLaMezlaFyPQebrYiZilLXc+lyzu5lsxfl7Ry0dAsVkakbfJXQgu3cWgH3r12or92ck/u1eftmfDJsPsyBCxVkeGC1eftydq98nUMy/wNLrL1jxrmwLwAAAABJRU5ErkJggg==")

/***/ }),

/***/ "./images/data/bank/RS3_disabled_preset.data.png":
/*!*******************************************************!*\
  !*** ./images/data/bank/RS3_disabled_preset.data.png ***!
  \*******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports=(__webpack_require__(/*! alt1/base */ "../node_modules/alt1/dist/base/index.js").ImageDetect).imageDataFromBase64("iVBORw0KGgoAAAANSUhEUgAAAB4AAAAeCAYAAAA7MK6iAAABhG5visiSAAAAAZub1BFAAAAAAAA7Gu72AAAAAlub1BFAAAAAAAAAAAAoYpy1QAAAAdub1BFAAAAAAAAAFrm3tAAAAAZbm9QRQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAzWlrwAAAAxUlEQVRIx+WVoQ4CMRBE310KEhJ+ABwCDF+AxPHrGAyST0CT7iAKwVzPXLorrrrZl9mZdrrL9SwCTjKD+/PtCj1uFyQzkWWuYDMVxeYOhpQzyBmcMz/FmpHiAh6+8HrcuimA9f6kUTC0WrXqimXUJU/mDs+VQTKBGoFrc02QJOgagWtzJeidA/1ftRTgsaD3/jyKx/opdn1NX48D2liK9Dgq1dGrnlG4gldd69PdQe3ALet4xPrSThEeE3RmmGqA1XLjDv8A1Rmj3Qp5HucAAAAASUVORK5CYII=")

/***/ }),

/***/ "./images/data/bank/RS3_presets.data.png":
/*!***********************************************!*\
  !*** ./images/data/bank/RS3_presets.data.png ***!
  \***********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports=(__webpack_require__(/*! alt1/base */ "../node_modules/alt1/dist/base/index.js").ImageDetect).imageDataFromBase64("")

/***/ }),

/***/ "./images/data/buttons/OS3_preset_01.data.png":
/*!****************************************************!*\
  !*** ./images/data/buttons/OS3_preset_01.data.png ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports=(__webpack_require__(/*! alt1/base */ "../node_modules/alt1/dist/base/index.js").ImageDetect).imageDataFromBase64("iVBORw0KGgoAAAANSUhEUgAAAB4AAAAeCAYAAAA7MK6iAAABhG5visiSAAAAAZub1BFAAAAAAAA7Gu72AAAAAlub1BFAAAAAAAAAAAAoYpy1QAAAAdub1BFAAAAAAAAAFrm3tAAAAAZbm9QRQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAzWlrwAAABGUlEQVRIx2O0M9X4z8DAwHDo9E0GegA7U3UGBgYGBhaYpQ2FsXSxuKF/MYOdqToDIwMD4//cBD8GeoLJCzZBfCwsyM/w9v1Hhl+//pBkACMTI8P/f/9xyjEwMKDIP33zluHH95+IoCYX4LKUkBwDAwMDE8MAgVGLRy1GAVzcPAy2Th4MVS0TGDR1DOhnsYiYBAMXNw9VfExSPn50/w7Do/t3GDRI8C2sIBlNXANmMQutLcBVZpPkYzlFFYb8yhYGeUUVhsCIBIbAiAT6peqJ7TWjcTy08jELPSzBlrKHbwFClXw8YHGMLYUi+whZnlArk4WBgYHhzNVbdPMpByc7xJF2phr/D52+yeBia0AXi/ccvgDpwgxUpw0AlzVVyqkxFXgAAAAASUVORK5CYII=")

/***/ }),

/***/ "./images/data/buttons/OS3_preset_02.data.png":
/*!****************************************************!*\
  !*** ./images/data/buttons/OS3_preset_02.data.png ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports=(__webpack_require__(/*! alt1/base */ "../node_modules/alt1/dist/base/index.js").ImageDetect).imageDataFromBase64("iVBORw0KGgoAAAANSUhEUgAAAB4AAAAeCAYAAAA7MK6iAAABhG5visiSAAAAAZub1BFAAAAAAAA7Gu72AAAAAlub1BFAAAAAAAAAAAAoYpy1QAAAAdub1BFAAAAAAAAAFrm3tAAAAAZbm9QRQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAzWlrwAAABYElEQVRIx2O0M9X4z8DAwHDo9E0GegA7U3UGBgYGBhaYpQ2FsXSxuKF/MYOdqToDIwMD4//cBD8GeoLJCzZBfCwsyM/w9v1Hhl+//pBkACMTI8P/f/9xyjEwMKDIP33zluHH95+IoCYX4LKUkBwDAwMDE8MAgVGLh7/FJKdqWycPBiNzGwZubh6Gr1+/MExsr6GPj79BLWurKWB48+oFg62TB318fPbkETj7zasXDFzcPAQLGarGMRc3D4OxuQ2KQ+iSuAIjEhgO79vB8ObVC/pZHJ2cw/Do/h2Gw/t20C9VB0YkMLx59YJoS3GV2SRZLKeowuDuG8Jw/coFBg0dAwYGBgaG9SsWMDy6f4e2Pn50/w5DRrTPCCu5SAVUz8eD3se4UvbwrRZx5eOhEcfYUiiyj5DlCbUyWRgYGBjOXL1FN59ycLJDHGlnqvH/0OmbDC62BnSxeM/hC5AuzEB12gAhJnqKZ3yNwwAAAABJRU5ErkJggg==")

/***/ }),

/***/ "./images/data/buttons/OS3_preset_03.data.png":
/*!****************************************************!*\
  !*** ./images/data/buttons/OS3_preset_03.data.png ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports=(__webpack_require__(/*! alt1/base */ "../node_modules/alt1/dist/base/index.js").ImageDetect).imageDataFromBase64("iVBORw0KGgoAAAANSUhEUgAAAB4AAAAeCAYAAAA7MK6iAAABhG5visiSAAAAAZub1BFAAAAAAAA7Gu72AAAAAlub1BFAAAAAAAAAAAAoYpy1QAAAAdub1BFAAAAAAAAAFrm3tAAAAAZbm9QRQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAzWlrwAAABc0lEQVRIx2O0M9X4z8DAwHDo9E0GegA7U3UGBgYGBhaYpQ2FsXSxuKF/MYOdqToDIwMD4//cBD8GeoLJCzZBfCwsyM/w9v1Hhl+//pBkACMTI8P/f/9xyjEwMKDIP33zluHH95+IoCYX4LKUkBwDAwMDE8MAgVGLh7/FJKVqWycPBiNzGwYGBgaGI/t2MJw9eYQ+Fr959YJhYnsNg4iYBENBZQvD61cvGB7dv0N7i69fuQB3wLevX4guZCi2WERMgsHY3IZBQ8eA4ezJI2T7luTE9e3rF4ZH9+8wnDt5hMHY3IZBREyCPnH87esXeHBzcfMwGJvbMOzcvIb2Pubi5oGz5RRViIrn///+wzHZPi6obGH4+vULAzc3D8PZk0cYDu/bQZ+gbqspGGElFzkAVz4evj7G1RoZvtUirrbX0IhjbCkU2UfI8oRamSwMDAwMZ67eoptPOTjZIY60M9X4f+j0TQYXWwO6WLzn8AVIF2agOm0AyESI25koTlwAAAAASUVORK5CYII=")

/***/ }),

/***/ "./images/data/buttons/OS3_preset_04.data.png":
/*!****************************************************!*\
  !*** ./images/data/buttons/OS3_preset_04.data.png ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports=(__webpack_require__(/*! alt1/base */ "../node_modules/alt1/dist/base/index.js").ImageDetect).imageDataFromBase64("iVBORw0KGgoAAAANSUhEUgAAAB4AAAAeCAYAAAA7MK6iAAABhG5visiSAAAAAZub1BFAAAAAAAA7Gu72AAAAAlub1BFAAAAAAAAAAAAoYpy1QAAAAdub1BFAAAAAAAAAFrm3tAAAAAZbm9QRQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAzWlrwAAABQElEQVRIx2O0M9X4z8DAwHDo9E0GegA7U3UGBgYGBhaYpQ2FsXSxuKF/MYOdqToDIwMD4//cBD8GeoLJCzZBfCwsyM/w9v1Hhl+//pBkACMTI8P/f/9xyjEwMKDIP33zluHH95+IoCYX4LKUkBwDAwMDE8MAgVGLRy3GCfIrWxjyK1voa7G7bwjDm1cv6OtjETEJBjlFFYZzJ48QXcjAMEUWRyfnMOzcvIa+cezuG8Jw48oFhkf371BsMQupFj+8f4dBQ8eAgZubh0FETIIhMCKBYf2KBbS1uCgtAs7W1DFgcPMNIWgprjJ7wPIx2bXT9SsXGK5fuTD0Si4WWluAnn+Hv49xpezhWy0O7XyMLYUi+whZnlArk4WBgYHhzNVbdPMpByc7xJF2phr/D52+yeBia0AXi/ccvgDpwgxUpw0AsoRn9kh9jOsAAAAASUVORK5CYII=")

/***/ }),

/***/ "./images/data/buttons/OS3_preset_05.data.png":
/*!****************************************************!*\
  !*** ./images/data/buttons/OS3_preset_05.data.png ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports=(__webpack_require__(/*! alt1/base */ "../node_modules/alt1/dist/base/index.js").ImageDetect).imageDataFromBase64("iVBORw0KGgoAAAANSUhEUgAAAB4AAAAeCAYAAAA7MK6iAAABhG5vUEUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJisiSAAAAAZub1BFAAAAAAAA7Gu72AAAAAlub1BFAAAAAAAAAAAAoYpy1QAAAAdub1BFAAAAAAAAAFrm3tAAAAAZbm9QRQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAzWlrwAAABW0lEQVRIx2O0M9X4z8DAwHDo9E0GegA7U3UGBgYGBhaYpQ2FsXSxuKF/MYOdqToDIwMD4//cBD8GeoLJCzZBfCwsyM/w9v1Hhl+//pBkACMTI8P/f/9xyjEwMKDIP33zluHH95+IoCYX4LKUkBwDAwMDE8MAgVGLh7/FJKfqvlkrGB7ev8PAwMDA8Oj+HYb1KxbQx+KH9+8wTGyvob+PSQWwgoQqFudXtjBwc/Mw7Ny8huHsySP08TEsmLm4eRha+ucwXL9ygeHb1y/0S9Xfvn5heHj/DoO8ogrtsxMXNw+cLaeowiAqJgFP4fjKbBgmO6hFxCQYYpJzGL5+/cLAzc3DMGtSB1nBTLLFj+7fYWirKRhhJRe18vHw9TGu1sjwrRZxtb2GRhxjS6HIPkKWJ9TKZGFgYGA4c/UW3XzKwckOcaSdqcb/Q6dvMrjYGtDF4j2HL0C6MAPVaQMAxoV8d6fIAKQAAAAASUVORK5CYII=")

/***/ }),

/***/ "./images/data/buttons/OS3_preset_06.data.png":
/*!****************************************************!*\
  !*** ./images/data/buttons/OS3_preset_06.data.png ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports=(__webpack_require__(/*! alt1/base */ "../node_modules/alt1/dist/base/index.js").ImageDetect).imageDataFromBase64("iVBORw0KGgoAAAANSUhEUgAAAB4AAAAeCAYAAAA7MK6iAAABhG5visiSAAAAAZub1BFAAAAAAAA7Gu72AAAAAlub1BFAAAAAAAAAAAAoYpy1QAAAAdub1BFAAAAAAAAAFrm3tAAAAAZbm9QRQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAzWlrwAAABZElEQVRIx2O0M9X4z8DAwHDo9E0GegA7U3UGBgYGBhaYpQ2FsXSxuKF/MYOdqToDIwMD4//cBD8GeoLJCzZBfCwsyM/w9v1Hhl+//pBkACMTI8P/f/9xyjEwMKDIP33zluHH95+IoCYX4LKUkBwDAwMDE8MAgVGLh7/FJKdqWycPBlsnD4avX78wnDt5hOHwvh20t9jY3IbByNyGoa2mgL4+NjK3YVi/YgHJhQxVfPzo/h2GwIgEBm5uHob1KxYwXL9ygT6J69H9OwwT22sY1q9YwBCdnEOfVP3t6xe4D69fucAgIiZBH4vPnjzC4O4bwsDAwMCgqWNAVDD///cfjsmO4/UrFjCk5lUwaOgYwPl0SdXfvn5hmNheM8JKLlIBrnw8fH2MqzUyfKtFXG2voRHH2FIoso+Q5Qm1MlkYGBgYzly9RTefcnCyQxxpZ6rx/9DpmwwutgZ0sXjP4QuQLsxAddoACBaBSvgyd7MAAAAASUVORK5CYII=")

/***/ }),

/***/ "./images/data/buttons/OS3_preset_07.data.png":
/*!****************************************************!*\
  !*** ./images/data/buttons/OS3_preset_07.data.png ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports=(__webpack_require__(/*! alt1/base */ "../node_modules/alt1/dist/base/index.js").ImageDetect).imageDataFromBase64("iVBORw0KGgoAAAANSUhEUgAAAB4AAAAeCAYAAAA7MK6iAAABhG5visiSAAAAAZub1BFAAAAAAAA7Gu72AAAAAlub1BFAAAAAAAAAAAAoYpy1QAAAAdub1BFAAAAAAAAAFrm3tAAAAAZbm9QRQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAzWlrwAAABMUlEQVRIx2O0M9X4z8DAwHDo9E0GegA7U3UGBgYGBhaYpQ2FsXSxuKF/MYOdqToDIwMD4//cBD8GeoLJCzZBfCwsyM/w9v1Hhl+//pBkACMTI8P/f/9xyjEwMKDIP33zluHH95+IoCYX4LKUkBwDAwMDE8MAgVGLh7/FJKXq/MoWFL6mjgFDTWEKw5tXL2hr8cT2GhRLGRgYyLKUonxsZG7DcGTfDqIKGarFsYiYBIOmjgHD2ZNH6Ju4jM1tGA4T4VuqW+zuG0KxxSTHsa2TB8PZk0cYvn39QlF5zkSOxZT6liwft9UUjKCSixxA1Xw8JHyMK2UP32qRavl4QOIYWwpF9hGyPKFWJgsDAwPDmau36OZTDk52iCPtTDX+Hzp9k8HF1oAuFu85fAHShRmoThsAK2dlhRWBnOEAAAAASUVORK5CYII=")

/***/ }),

/***/ "./images/data/buttons/OS3_preset_08.data.png":
/*!****************************************************!*\
  !*** ./images/data/buttons/OS3_preset_08.data.png ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports=(__webpack_require__(/*! alt1/base */ "../node_modules/alt1/dist/base/index.js").ImageDetect).imageDataFromBase64("iVBORw0KGgoAAAANSUhEUgAAAB4AAAAeCAYAAAA7MK6iAAABhG5visiSAAAAAZub1BFAAAAAAAA7Gu72AAAAAlub1BFAAAAAAAAAAAAoYpy1QAAAAdub1BFAAAAAAAAAFrm3tAAAAAZbm9QRQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAzWlrwAAABgklEQVRIx+2XP0hCURSHvxdCpUJEKU5BEGjQIIi4mFPQVFNbBYGrga3i4CDmlliTEQTR5pSLQjhoSxjR0mAIkhCIf4hArSR6DaIZ9BAln2T94PGGA++7v3vOPe9cwWY2iACJVBo5ZDPrAVA0oZ6dTVnAnr0TbGY9Agji9tYqcmr/+KzheGpygvLjE/X6W1cfEEYExHdRMgZ8iT+Uyrw8v35uda+SgnaKAYwwIP2Dhx/cdVWbLFaWV9aoVitotDpCQT+5bKb/4HW7A5/bSamQby3iMOjvP7hWraBUqQGY1uqoVSsdm8yPgENBPxt2B8VCHoDTowN5istksVIs5Lm+vECj1WGyWPtfXDOzc8wvGPG5nQDcZzO4vAGS8Wj/HStV6laOm+9O/bz59Ow4l82QjEdxeQOtHAd23fKc41gkTCwS/kOdq1tJnePhdSw1jQzvb1Fq9vodOf6uQtsdtcc7TZkKgKvbO9mcjo2PNhZpMxvERCrN0qJRFvB58qZxhRnUpe0DrByIEwPENy4AAAAASUVORK5CYII=")

/***/ }),

/***/ "./images/data/buttons/OS3_preset_09.data.png":
/*!****************************************************!*\
  !*** ./images/data/buttons/OS3_preset_09.data.png ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports=(__webpack_require__(/*! alt1/base */ "../node_modules/alt1/dist/base/index.js").ImageDetect).imageDataFromBase64("iVBORw0KGgoAAAANSUhEUgAAAB4AAAAeCAYAAAA7MK6iAAABhG5visiSAAAAAZub1BFAAAAAAAA7Gu72AAAAAlub1BFAAAAAAAAAAAAoYpy1QAAAAdub1BFAAAAAAAAAFrm3tAAAAAZbm9QRQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAzWlrwAAABhklEQVRIx2O0M9X4z8DAwHDo9E0GegA7U3UGBgYGBhaYpQ2FsXSxuKF/MYOdqToDIwMD4//cBD8GeoLJCzZBfCwsyM/w9v1Hhl+//pBkACMTI8P/f/9xyjEwMKDIP33zluHH95+IoCYX4LKUkBwDAwMDE8MAgVGLh7/FJKdqY3MbBnffEIavX78wMDAwMMye1MHwDcqmmY+5uHkYAiMSGCa01zBMbK9huHHlAkNgRALtg1peUYXh9asXcB/u3LyGwdjchmAhA8NkW/z61QsGeUUVBi5uHgYGBgYGTR0DOJumcfzm1QuG9SsWMFS1TGB4/eoFw6P7d+iXuA7v28FweN8OBgYGBgY5RRUGOUUV+mQn5KB19w1hOAJ1BL4yG4Yp8nFgRAKDiJgEAzc3D8PZk0cYzp48Qp+gXjp3yggruUgF6Pl3+PsYV2tk+FaLuNpeQyOOsaVQZB8hyxNqZbIwMDAwnLl6i24+5eBkhzjSzlTj/6HTNxlcbA3oYvGewxcgXZiB6rQBAPdIg8foY5EFAAAAAElFTkSuQmCC")

/***/ }),

/***/ "./images/data/buttons/OS3_preset_10.data.png":
/*!****************************************************!*\
  !*** ./images/data/buttons/OS3_preset_10.data.png ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports=(__webpack_require__(/*! alt1/base */ "../node_modules/alt1/dist/base/index.js").ImageDetect).imageDataFromBase64("iVBORw0KGgoAAAANSUhEUgAAAB4AAAAeCAYAAAA7MK6iAAABhG5visiSAAAAAZub1BFAAAAAAAA7Gu72AAAAAlub1BFAAAAAAAAAAAAoYpy1QAAAAdub1BFAAAAAAAAAFrm3tAAAAAZbm9QRQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAzWlrwAAABrklEQVRIx+2XPUgCYRjHfydCHydEZOJUCEIKDUJIizlEVEtB0NAiuNRW4ObQ4FZbZE1BIETgIAg1BU062nDDhRlBEAQRSgTZF9E1mHXWiVrHVdIfXo7jf9z/fT7e53lewe91KQCpTA4j4Pf2AWAui0ZCAUOEIytb+L19CCAo88FJjMRabKdkcVdnB4Wrax4fnxr6gWASUJ6VqhxQwZ/nC9zfPby7+quoJlqLAzDxQ/gXbn7hmlndLloYGPQxNDxOMh4jK0sV3OxCGIBum52N6DJnpyf6WGy12WkXLZrc1EyQI1lidWmR7c11xiam9XP12ekJe7sJisWbT5y738PebgKArCwxMOjTLCTlpVuMrTZ7xbs6DM2Z1bcf3N/rcBojnJUl3P2et3hruVp5Vt5WQ8epx+FkaiZI7+vTJUsk4zEAkvEYcwthRos3iKKFjehy/Z0NBCUSCnypLaqTLH95UfO7clvcT0v6JFc9og1Xru/i4/n9/bVaD2hNI83bFqvNXn8jxloZqrZIzdeaMs0AB4fHhlna2tZS2qTf61JSmRwjQx5DhPfTUukK81OXthcMiZtiSl/W7QAAAABJRU5ErkJggg==")

/***/ }),

/***/ "./images/data/buttons/OS3_preset_11.data.png":
/*!****************************************************!*\
  !*** ./images/data/buttons/OS3_preset_11.data.png ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports=(__webpack_require__(/*! alt1/base */ "../node_modules/alt1/dist/base/index.js").ImageDetect).imageDataFromBase64("iVBORw0KGgoAAAANSUhEUgAAAB4AAAAeCAYAAAA7MK6iAAABhG5visiSAAAAAZub1BFAAAAAAAA7Gu72AAAAAlub1BFAAAAAAAAAAAAoYpy1QAAAAdub1BFAAAAAAAAAFrm3tAAAAAZbm9QRQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAzWlrwAAABTUlEQVRIx2O0M9X4z8DAwHDo9E0GegA7U3UGBgYGBhaYpQ2FsXSxuKF/MYOdqToDIwMD4//cBD8GeoLJCzZBfCwsyM/w9v1Hhl+//pBkACMTI8P/f/9xyjEwMKDIP33zluHH95+IoCYX4LKUkBwDAwMDE8MAgVGLRy1m4OLmYbB18mCoapnAoKljQLQcxRaLiEkwcHHzkCxHCBDMx4/u32F4dP8OgwYWH+GTQy9IRhPXgFnMQmsLcJXZzAwMjA0OlvoM33/8ZPj79x+GAjlFFYaEzCIGeUUVBnlFFQYRMQmGG1cuEJTDBj5/+87w589fhnuPXkDq44bCWLKqRVIBrFrcc/jCMI7jQZePWehhCbaUPXwLEFz5eGjEMbYUiuwjZHlCrUwWBgYGhjNXb9HNpxyc7BBH2plq/D90+iaDi60BXSzec/gCpAszUJ02AM2tgDw53ILAAAAAAElFTkSuQmCC")

/***/ }),

/***/ "./images/data/buttons/OS3_preset_12.data.png":
/*!****************************************************!*\
  !*** ./images/data/buttons/OS3_preset_12.data.png ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports=(__webpack_require__(/*! alt1/base */ "../node_modules/alt1/dist/base/index.js").ImageDetect).imageDataFromBase64("iVBORw0KGgoAAAANSUhEUgAAAB4AAAAeCAYAAAA7MK6iAAABhG5visiSAAAAAZub1BFAAAAAAAA7Gu72AAAAAlub1BFAAAAAAAAAAAAoYpy1QAAAAdub1BFAAAAAAAAAFrm3tAAAAAZbm9QRQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAzWlrwAAABmUlEQVRIx2O0M9X4z8DAwHDo9E0GegA7U3UGBgYGBhaYpQ2FsXSxuKF/MYOdqToDIwMD4//cBD8GeoLJCzZBfCwsyM/w9v1Hhl+//pBkACMTI8P/f/9xyjEwMKDIP33zluHH95+IoCYX4LKUkBwDAwMDE8MAgVGLh7/FBFM1FzcPg7G5DYOtkwfD+hULGK5fuYAib+vkwWBkbsPAzc3D8PXrF4aJ7TXU8bGImAQDFzcPTvlvUMvaagoY3rx6wWDr5EEdHz+6f4fh0f07DBo6Bljlz548Ame/efUCw5GwgoRmcQyLEmSH0CVxBUYkMBzet4PhzasX9LM4OjmH4dH9OwyH9+2gXqomxqdvXr3AaSmuMpugxXKKKgyBEQkM8lBa48oFhvUrFsDl3H1DGK5fuQBPfOtXLGB4dP8O4ZqNgYHxf0NhLFnVIqkAVi3uOXxhEJdclAKa5+NB52NcKXv4Vou48vHQiGNsKRTZR8jyhFqZLAwMDAxnrt6im085ONkhjrQz1fh/6PRNBhdbA7pYvOfwBUgXZqA6bQAswpmY2+5OLQAAAABJRU5ErkJggg==")

/***/ }),

/***/ "./images/data/buttons/OS3_preset_13.data.png":
/*!****************************************************!*\
  !*** ./images/data/buttons/OS3_preset_13.data.png ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports=(__webpack_require__(/*! alt1/base */ "../node_modules/alt1/dist/base/index.js").ImageDetect).imageDataFromBase64("iVBORw0KGgoAAAANSUhEUgAAAB4AAAAeCAYAAAA7MK6iAAABhG5visiSAAAAAZub1BFAAAAAAAA7Gu72AAAAAlub1BFAAAAAAAAAAAAoYpy1QAAAAdub1BFAAAAAAAAAFrm3tAAAAAZbm9QRQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAzWlrwAAABs0lEQVRIx+2Xv0sCYRjHPxdCPxQiEnEqgsAbGiQRl9NBGpqCtpagfyCoMWhwEBoj+geEloZAqKUgGvIWMcOhCEM4EAIxIwK1kuga7MrI6/zVVdIXXm74wvu97/M87/s8rxDwiirAcSKNGQh4XQBYNNHQ8rwpwqH1LQJeFwII6uLCDGZiM7JbdTw8NMjN7R2VylNTGwg9AuqzqssBH/irwg0P94/voW4VeqJGHEAPP4R/4e4XNqzqAasNj0/CH5wmuh3h4iz1xvmD00z6JADko32ScblzwnaHkwGrrS5XyOfYWFvF7nCytBLmOp8jq2Q6I5xVMmSVDOKE+xOnuS/kc5RLxS8vkqaFjaLh8UmIE26Scblht20XV7lUJKtkOI3LeHwSdoezczk2EtbCrRXhwd7O9zuuLbqRsfG6eVaf1bfVlOORsXFm5xYYff2KZymi2xEAllbClEpFrFYbybhM7Gi/8c4Gghpanm+pLTYLrS0exlK/+OZqF3rnuHsd600j3dsW9Wavv5HjehVa66iWN5oyLQAn55emOe3r763+ZMArqseJNFN+tynCh7FU9QnzU4+2F2IAqiPiBQBQAAAAAElFTkSuQmCC")

/***/ }),

/***/ "./images/data/buttons/OS3_preset_14.data.png":
/*!****************************************************!*\
  !*** ./images/data/buttons/OS3_preset_14.data.png ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports=(__webpack_require__(/*! alt1/base */ "../node_modules/alt1/dist/base/index.js").ImageDetect).imageDataFromBase64("iVBORw0KGgoAAAANSUhEUgAAAB4AAAAeCAYAAAA7MK6iAAABhG5vUEUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJisiSAAAAAZub1BFAAAAAAAA7Gu72AAAAAlub1BFAAAAAAAAAAAAoYpy1QAAAAdub1BFAAAAAAAAAFrm3tAAAAAZbm9QRQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAzWlrwAAABiUlEQVRIx2O0M9X4z8DAwHDo9E0GegA7U3UGBgYGBhaYpQ2FsXSxuKF/MYOdqToDIwMD4//cBD8GeoLJCzZBfCwsyM/w9v1Hhl+//pBkACMTI8P/f/9xyjEwMKDIP33zluHH95+IoCYX4LKUkBwDAwMDE8MAgVGLRy1m4OLmYbB18mCoapnAoKljgFNdfmULQ35lC/UsFhGTYODi5sGrxt03hOHNqxfU9fGj+3cYdm5ew/D16xecDpNTVGE4d/IIzoIEhqkax9HJOQw7N6+hb+Jy9w1huHHlAsOj+3dI1stCqcUP799h0NAxYODm5mEQEZNgCIxIYFi/YgFtLS5Ki4CzNXUMGNx8QzAsxVVmEwxqOUUVhvzKFgZ5RRWGwIgEhsCIBKrkY0YGBsb/DYWxZFWLpAJYtbjn8IWBK7lYaG0Bev4d8LKahR6WYEvZw7daJDsfD4o4xpZCkX2ELE+olcnCwMDAcObqLbr5lIOTHeJIO1ON/4dO32RwsTWgi8V7Dl+AdGEGqtMGAJ1rgjOiV6hrAAAAAElFTkSuQmCC")

/***/ }),

/***/ "./images/data/buttons/OS3_preset_15.data.png":
/*!****************************************************!*\
  !*** ./images/data/buttons/OS3_preset_15.data.png ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports=(__webpack_require__(/*! alt1/base */ "../node_modules/alt1/dist/base/index.js").ImageDetect).imageDataFromBase64("iVBORw0KGgoAAAANSUhEUgAAAB4AAAAeCAYAAAA7MK6iAAABhG5vUEUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJisiSAAAAAZub1BFAAAAAAAA7Gu72AAAAAlub1BFAAAAAAAAAAAAoYpy1QAAAAdub1BFAAAAAAAAAFrm3tAAAAAZbm9QRQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAzWlrwAAABnklEQVRIx+2XPUgCcRjGfydB5R1EVOKkCEIODUEcLeUQDU1BW0OB0FpEY9DgENRUVJs0CC0OgVBT4KQtYcENRhQHh0JbEoHXF9E1XFcGHabZWdIDxw0P3HPP+3+//kJYDhkA6ew5TiAs9wLQYolGF6YdEY6u7xCWexFAMOYi4ziJrfie6birs4Pi9Q2Pj09VfUBwCRjPhi0HfOAvr4rc3z28h7pW2IlW4gBcNAj/ws0vXDGr3aLEwOAQwyNjJBNxznLKB34tliCvqQAUNJVkIl4f4W6PF7co2fJ5TWVjZan+jguaSkFTCfX11xRSq5FULfwVzC8uI4oSB/u7nBwd1sdxJVhhdosSy+vbnOUUbvWSc1l9q5fIayr+QPDny6k86XyBID0e71uGl/ds66kq1L5AkInJCP7XdyinvJVMt8fL1Mwsul5CFCVim6tfCjNgzuPownRNY7FaWGMxlVF+cef6LuzquHkd220jzTsW7Xavv3HGn2VouaNyvtKW2QJwfHrhmNO29lbzJ8NyyEhnzxkd7ndEOJVRzCtMoy5tL/r7myKwljTzAAAAAElFTkSuQmCC")

/***/ }),

/***/ "./images/data/buttons/OS3_preset_16.data.png":
/*!****************************************************!*\
  !*** ./images/data/buttons/OS3_preset_16.data.png ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports=(__webpack_require__(/*! alt1/base */ "../node_modules/alt1/dist/base/index.js").ImageDetect).imageDataFromBase64("iVBORw0KGgoAAAANSUhEUgAAAB4AAAAeCAYAAAA7MK6iAAABhG5visiSAAAAAZub1BFAAAAAAAA7Gu72AAAAAlub1BFAAAAAAAAAAAAoYpy1QAAAAdub1BFAAAAAAAAAFrm3tAAAAAZbm9QRQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAzWlrwAAABqElEQVRIx+1Xz0vCcBx9E6FyQkQSnoogcIEHUcYumwcJ8lIgdBBCEKJbRd46ePBUx4j+gUGX3QadOkgH9SJW7GCIMRgI3ZIItB8SroO5lLaGZrOkB2OHB9+39/28fT+fLxGkKRUAMoUyrECQ9gAA7G3RVCJmiXDq8ARB2gMCINTt+CqsxDF/2nI8PTWJ6v0DGo3XnhYgbATUpmrIAejib++qeH56+djqfmEkasYBgA1Dwr/w6AubptpBOhFgWHChMESBR6kodfFcKAwuFEa9XsNVPofs+dlghF0zbjhIpy4XYFj4GRb7yd3BO64oMiqKDMrr+8T5GRaiwJseMn0Jf4UAw6KiyIhE4yBJp24pfixcFUXG0UESosBjfWPLmlQ/1muaw1JRgmvGbY3wZT6H5ZU1AMCi16e7zWpT1Z6eajw7v4BINI659zdVlLRAiQKPzZ09LXhmQesKHUCoqUSsr7bYK9ptMZ2VfvHJ9V0Y/cej69hoGhndtmg0e/2NGusltNNRJ282ZdoB4OL6xjKn4xNjrY8M0pSaKZSxxPksEU5npdYVZliXtjfQpJ+RLqPz1wAAAABJRU5ErkJggg==")

/***/ }),

/***/ "./images/data/buttons/OS3_preset_17.data.png":
/*!****************************************************!*\
  !*** ./images/data/buttons/OS3_preset_17.data.png ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports=(__webpack_require__(/*! alt1/base */ "../node_modules/alt1/dist/base/index.js").ImageDetect).imageDataFromBase64("iVBORw0KGgoAAAANSUhEUgAAAB4AAAAeCAYAAAA7MK6iAAABhG5visiSAAAAAZub1BFAAAAAAAA7Gu72AAAAAlub1BFAAAAAAAAAAAAoYpy1QAAAAdub1BFAAAAAAAAAFrm3tAAAAAZbm9QRQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAzWlrwAAABgElEQVRIx2O0M9X4z8DAwHDo9E0GegA7U3UGBgYGBhaYpQ2FsXSxuKF/MYOdqToDIwMD4//cBD8GeoLJCzZBfCwsyM/w9v1Hhl+//pBkACMTI8P/f/9xyjEwMKDIP33zluHH95+IoCYX4LKUkBwDAwMDE8MAgVGLh7/FBFM1FzcPg7G5DYOtkwfD+hULGK5fuQCXy69sQVGrqWPAUFOYwvDm1QvKLRYRk2Dg4ubBKjexvQbFUgYGBqIsJcriR/fvMDy6f4dBA2owLmBkbsNwZN8OnAUJTeJYREyCQVPHgOHsySP0TVzG5jYMh7H4luYWu/uGkGwxC6WW2jp5MJw9eYTh29cvJJXZBH0sp6jCkF/ZwiCvqMIQGJHAEBiRgGExqb5lYGCA1McNhbFkVYukAli1uOfwhUFcclEKaJqPB6WPcaXs4Vstkp2PB0UcY0uhyD5ClifUymRhYGBgOHP1Ft18ysHJDnGknanG/0OnbzK42BrQxeI9hy9AujAD1WkDAME3hHZev6WJAAAAAElFTkSuQmCC")

/***/ }),

/***/ "./images/data/buttons/OS3_preset_18.data.png":
/*!****************************************************!*\
  !*** ./images/data/buttons/OS3_preset_18.data.png ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports=(__webpack_require__(/*! alt1/base */ "../node_modules/alt1/dist/base/index.js").ImageDetect).imageDataFromBase64("iVBORw0KGgoAAAANSUhEUgAAAB4AAAAeCAYAAAA7MK6iAAABhG5visiSAAAAAZub1BFAAAAAAAA7Gu72AAAAAlub1BFAAAAAAAAAAAAoYpy1QAAAAdub1BFAAAAAAAAAFrm3tAAAAAZbm9QRQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAzWlrwAAABw0lEQVRIx+2XP0hCURjFfy+CSoWISpyKINDAQRBxMYcIaikIGoIKhNaCXMXBIcotsaYiECJoC5oawkFbogiHIgpBEgIxJQK1P0SvwXwl+DKzXiUdeLzhwDv33O+8+31XsFsMIkDo4AwlYLfoAagviHqck4oIexbXsVv0CCCIM45hlMRSYDvvuLWlmfT1DQ8PjxV9QKgTEJ9EWQ4o4i9Tae5u71+3+rOQEy3HAdTxQ/gXrn3hsqlWqTWYrTZ6+wbZ2gxwehwp4s1WGwNDo2SzGdq1Olb8XuKxaPXCbVodKrVGlh+fmmbePUsqmZAWser3Vi8cj0WJx6IYjKaSfC6bkRbWptWRy2ZKHiQVC5fDit/LxNQ0V8kEABtry8qEy2y1cZVMcLS/R7tWh9lq+5pwvYeOrm56jCbm3bMAXMSiuOZ8hIM73+9YpdZINS4VQvFJlJ6KHHd0dTMy5qDz5W04jrC1GZCCFw7u4JrzSTX2Lbg/1tlAED3OyU+1xUpRaIu74cgvPrmqhdx/XLuO5aaR2m2LcrPX36hxqYS+dfSWLzdl1gMcnpwr5rSxqSG/SLvFIIYOzujvNSkivBuO5K8wP3VpewaG76adppq0SQAAAABJRU5ErkJggg==")

/***/ }),

/***/ "./images/data/buttons/RS3_preset_01.data.png":
/*!****************************************************!*\
  !*** ./images/data/buttons/RS3_preset_01.data.png ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports=(__webpack_require__(/*! alt1/base */ "../node_modules/alt1/dist/base/index.js").ImageDetect).imageDataFromBase64("iVBORw0KGgoAAAANSUhEUgAAAB4AAAAeCAYAAAA7MK6iAAABhG5visiSAAAAAZub1BFAAAAAAAA7Gu72AAAAAlub1BFAAAAAAAAAAAAoYpy1QAAAAdub1BFAAAAAAAAAFrm3tAAAAAZbm9QRQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAzWlrwAAABZUlEQVRIx8WWMU7DQBBFn9EWxHSRKIMrBJSkTcERIpGSI3AUBBRcgTaFj8AlIOmIL4Gy652hiJOYiEj2WlpP49VqZp7+93jXydProwKAAkn15J91PbS2d5ifHMn5m2/EJ7x//NQabNskaLW3WXMkp47VXV29/rDfw90AU3qllJKY4T0YVxId7EowzoKPDbZgnAMvPi7YgbE2PthaMM4qKhrZasWsLaASFby2YHwJKnHBvgTjPag2szpNU8a3YyaTCXmes1guwr9jEUgaKj4fDkkHp5sDTKVx3WGIVIppOFvFqqBYFVxf3VRwuiluP1wKqsFDWSmumrTk7uBBinWrOKC6g9UiO6sDOmi44tbgiyxjOpsxyjKm9zOWX5/k83kguM1Uf694e37pfIDIZqq19h8RJ0QU4yV8SIKPzP07JrJiOIl8P+zB2gNYBYxoD1br9nbqxWrtwWrtdbh6UmxUYXR2GR38C9rf7SIdoRL6AAAAAElFTkSuQmCC")

/***/ }),

/***/ "./images/data/buttons/RS3_preset_02.data.png":
/*!****************************************************!*\
  !*** ./images/data/buttons/RS3_preset_02.data.png ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports=(__webpack_require__(/*! alt1/base */ "../node_modules/alt1/dist/base/index.js").ImageDetect).imageDataFromBase64("iVBORw0KGgoAAAANSUhEUgAAAB4AAAAeCAYAAAA7MK6iAAABhG5visiSAAAAAZub1BFAAAAAAAA7Gu72AAAAAlub1BFAAAAAAAAAAAAoYpy1QAAAAdub1BFAAAAAAAAAFrm3tAAAAAZbm9QRQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAzWlrwAAABmklEQVRIx8WWu0rEQBRAT2QKN36DWglarqUuWAl2vqpFSyvxTyzExzfYWfgJum7no1Ps3G2zpS46ydxrsYlGRXAiTC4EJtzH4b4mifYPdhUiQPldCn2Uv5fP/KLTb77lWGCcizi9eC2FUCIitGQc5cafujJGP2y+on7GKWRrqYFxDlLJCCnOgUkzyAKD0wxMasGFBlswaQpOXFhwCsba8GBrwaRWUdHApVbMmwVUgoLfLBiXgUpYsMsY7bHq30vdWmzRbDaJ45jhcMjxyXG1PRaByCPj4cszJ0eHALTbW7QWFuheXXmBRfKM8Zitu5vbj/NgkBA3Yi//IuMxkXy4PJ+4MU5zfp67m2tv3zxjBfVfp9W1dbqdDoMkqdBjHfXYt1Tt7W36vT7dzmWlqRahAP+dvLqxySBJ6F5eVF4nb/DU9DTLKys8PtwzOzcHwPnZGf1erwLYY6r7Tz32dnb+fYHIaI+19O8QRkQU4yoM17+vzM8eEzjj4gKhBrDWAFYBI1pDqbX4OtVSaq2h1FrrcNWUsVGFyYmZ4OB3fugjHt3emvQAAAAASUVORK5CYII=")

/***/ }),

/***/ "./images/data/buttons/RS3_preset_03.data.png":
/*!****************************************************!*\
  !*** ./images/data/buttons/RS3_preset_03.data.png ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports=(__webpack_require__(/*! alt1/base */ "../node_modules/alt1/dist/base/index.js").ImageDetect).imageDataFromBase64("iVBORw0KGgoAAAANSUhEUgAAAB4AAAAeCAYAAAA7MK6iAAABhG5visiSAAAAAZub1BFAAAAAAAA7Gu72AAAAAlub1BFAAAAAAAAAAAAoYpy1QAAAAdub1BFAAAAAAAAAFrm3tAAAAAZbm9QRQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAzWlrwAAABrUlEQVRIx8WVvW7UQBSFv0HTeFPGLaFCIqWzZSLxHjwCCkLwCumgQER5Bp4BRLXFdvvTsWxHXCah9EDGnntTeJ0EhNDEicaWRr4e+86559wfm/cfXioAGGBjYjZ3/cd+Z9Pj3c25NgTDp8lvFMVg0FvO3fPf+/xxvPmvb2e3cO13L55n2BCgloaUVwiKrRtoEgPXDdjaQ0gN7MHWNQQJaYFrsN6nB/YebO0VFU0stWIvPaCSFPjSgw0NqKQFDg1tH6vGSX2wf0BRFABMp1MWy0XPPgYrAiaS8cX5GSfHH8nznMNXr/l5fkZZlncGFtkwJrK21qvvmwAucM61fnoPxrHFlec5xd6YZ7u7LOczytMfvaQWgUchKGjcclVFWZ6ymM8pxmPy7Tza9/YKQTvGcZG6yrH+tmLNilE2otgb8/XL536MW+C4SEdZdm3vPNnBuaoXY5HrHMdRPnzzll+uIhttsZzNmE4mvXNs5Q5V/e7o6EEGiLRVrRjSzmoRxQbp14v3Gpk3OSYx466qGQBYBwBWASs6gNTa/Z0GkVoHkFoHLa6BGFtVeLz1NDnwFb+aX9QR9vnDAAAAAElFTkSuQmCC")

/***/ }),

/***/ "./images/data/buttons/RS3_preset_04.data.png":
/*!****************************************************!*\
  !*** ./images/data/buttons/RS3_preset_04.data.png ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports=(__webpack_require__(/*! alt1/base */ "../node_modules/alt1/dist/base/index.js").ImageDetect).imageDataFromBase64("iVBORw0KGgoAAAANSUhEUgAAAB4AAAAeCAYAAAA7MK6iAAABhG5visiSAAAAAZub1BFAAAAAAAA7Gu72AAAAAlub1BFAAAAAAAAAAAAoYpy1QAAAAdub1BFAAAAAAAAAFrm3tAAAAAZbm9QRQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAzWlrwAAABkElEQVRIx8WVv07DMBCHvyAvLSPpCEyI9imYWmBCsAFvgKhg4iUYGMozsLWoj8ADwFjoRmEEdnByPoakf6iKSILknHSR7fj86Xe2z8Hl1YlCQGJK0ta0P9se95kbY8Hcv9czIgE3d59zv5SAAF0IgCBdWNPveO58zG/jx1sVjAhELsaniYCJYog9g6MYTGRBfIMtmCgCceIXHIGx1j/YWjCRVdSp51Qr5ssC6ryCvywYiUGdX7DEJPdYNX+q26dtADrXnWL32DkIciputlp8vL0ThmHuWADnYEkkrX0ZPVwJWVtd5+HhflqOc/pEcZ7DdXh0RP/2lkq1mqyihRUraDZvtrZ5enzkZfScQskcO+siOlaccW+3d3gdjajXG1SqVcJajb39A/q9Xm7FKTgb+eL8bNLebDRo7ezS73YLpToX+Idp+ikQm4Ale6pnbTgYMBwMChUQl5xqJcBvrXZOMeKKKf5XyZzuMZ4Vw5Ln92EK1hLA6sA4LSHVOn6dSkm1lpBqLfVwlaTYqMLq8oZ38DfkAjBpLKG6FgAAAABJRU5ErkJggg==")

/***/ }),

/***/ "./images/data/buttons/RS3_preset_05.data.png":
/*!****************************************************!*\
  !*** ./images/data/buttons/RS3_preset_05.data.png ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports=(__webpack_require__(/*! alt1/base */ "../node_modules/alt1/dist/base/index.js").ImageDetect).imageDataFromBase64("iVBORw0KGgoAAAANSUhEUgAAAB4AAAAeCAYAAAA7MK6iAAABhG5visiSAAAAAZub1BFAAAAAAAA7Gu72AAAAAlub1BFAAAAAAAAAAAAoYpy1QAAAAdub1BFAAAAAAAAAFrm3tAAAAAZbm9QRQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAzWlrwAAAECklEQVRIx32Xv24kRRDGf9UaCZ0NEb4QnPIUPAgBxEiAxBsgEEK649CJCy4iJQUyBBEPcGQnMmQvr2BseXe7PoKu6u4Z24y18s5Md/356quveu3Jdx8LDBDj2t6DWUFyHr6mPYrbe+zktdRq/PjHDdJYYKVA3AthWFpCYajfCczsXieSciH0deKD9x+x1ApHryuj1BrGrWVpzXUPzqwHBoYVQ660TkQzsldAELHVaiyHAxz8MIX5P0jm5ZsEfd6eCG2vnhaHo5rjGhmvlnRowokP6IoZqCWSzxo6Il71uDKIRMvMOByM5XgQx3rs+BuGh1UzYwK0G64RVMsO5C0Y7+Sb4AjozaxX4HgQy35vuHvPtWcJuGsqZ8Rv+a4Z8TB6dLGC5873Ua/bPSz7vZB7h8jdKZmpNiW3YDEt26kRkBSIDKyz/UYyzeB+L5bbW4EcD/gMRT1sGGJiJuDycDCxOKPQ6GULvki24udhb62PW2TT/0w1RSC/uwaB0r6PznmoKXJPVuN4hMU9EOiwjEhNFmVIFotvnz5jt9sBsNvt+PmXn1aJP3TN72oVi1fAawgETQyAkmQD5OoM3u0uefH980npgnCzSM36oQ0iEl5hOdYJVglFv66UO2rfTWvT55ohXasaGrKawVaHxd1ab8z6ytBVaHC3Z83hp599zsnJCb//9it/vnrVa5jlGNB614AZa6+w1Op3IrVVAONeghfPnyHBm6enfPH1N/z1+jU319d3mL9WWa3uq0NxDzi8Yuo6iMUHd5BjQLFWbySurq7YXV5wfn7egnJhou/rtlAj7mTbm2PCAd1hGle2jzeROXnjESWMv/vOOWdnj7n8+6IRMRyncbl3G/lcYcc92ym6N8lg8YdFlKVQBG+fPeaTjz7k+t9rTk5P+OHlS26ur4aWIzZyxiwdFtxpjiu9s42hy6vxFpn/c3nBk6++DOEYJOyi4rpT3z5Iwl5Wr7hr6r8RsQnkPkYfce+jFHMXyH11Tsn3pWc7DZ+jWo2lyFr0T4t+AkrTxMh1GUCsVfZyhhB6YOk2bFTBUn2S5J5tyk0j3UpMXOtBP+vPhN56aGiKuaFYFGxOX6uNk6JZzvSsWSeO1h+bYDfr6tb3qB3pyorVUz3n3h/SaKsT55DFzHY+bYzSpc0Sgchh8c0L9XkctQkjCitGGyRoq1A2HRxGEEIUK4OECBcUCYqVRnX37sziOJpyWsy6gz4qJ6RTcm3DYJu0HhrUXbkkDT21TSOG896jU/uQZ+kS0JqtB3OftZvKCJY8GJqVcY6aNzIzbsW+e08obc16XM4TtfEBiqeOTqI+6VtXrl7JVRa26QCbxEMP/tbyzPj8rffuC6z/IpmDt81xxuz+Y859z/t7h/8ANP57D8K2wOkAAAAASUVORK5CYII=")

/***/ }),

/***/ "./images/data/buttons/RS3_preset_06.data.png":
/*!****************************************************!*\
  !*** ./images/data/buttons/RS3_preset_06.data.png ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports=(__webpack_require__(/*! alt1/base */ "../node_modules/alt1/dist/base/index.js").ImageDetect).imageDataFromBase64("iVBORw0KGgoAAAANSUhEUgAAAB4AAAAeCAYAAAA7MK6iAAABhG5visiSAAAAAZub1BFAAAAAAAA7Gu72AAAAAlub1BFAAAAAAAAAAAAoYpy1QAAAAdub1BFAAAAAAAAAFrm3tAAAAAZbm9QRQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAzWlrwAAADwElEQVRIx71Xu44dRRA9NeoAVoR2SnzlbO+GrCUiEJFNyCNzZPwdlkA8LCF+gQhje/+AYDMLE3FZMtsfcS1mpusQdHV31cwsZB7paqZf1VV1qk7VlW8fPSDaQ5CAiMDPAVJXIfBrfc6vkUWkl0MyjFPOwM+/vcH64WIs4QVyscbtvVzL+eLDd5HmiZjy1M9uvf/vuW6fn3cy5/kdpDkDs854m880AWkagcxccBEUvBwe9bu8nedkjUaHUP4zZqYJSONEZM1FCjt8Za+EeTBe7OGWhSJ1rgSawN89T0AaRyDnLVeLs7Ba7QImmL+0dAvorvE4Amka2cI/BiZBdUaLLdY55cY9rCqDC/NpyoPEP6MijaPTvG5o+VhkNSOraMZMWSaAIrq+IUUtwTUCaZ4Bzbl5TqSQArUHCzcym04JLkJBBFB/vjrHxvMMpKwsY6I4SNkixxQMEJ2fn+P8g9s4Ho948cfvuLy8XHFHPdcRNJk2zipImgXQHFwlC4vrgdPTM+xP9/jm64dgCKdKmYjngj5dO81GmdXaEJl0HG25vD87w8XTpw3jvhaVLr7HtfyeM5FU4XwKCNmtr98CUBX7/Rlev3yJO3c/xcnJCS6ePcHV4dCzomG8zBJ28EmoAoNmw1XtTRZFaGnGOl/Ovn71Cj8++h7PnvyKzz7/EiAh7tf2N1nrX85AyupzxVimBUSMrePxiKvDnxAAf/91wI2bN4NXwEgVROQZsQ9VYKBdLIqmJVXLtxIDDUcSL54/x0cffwIqsdvtcHU4FKlKMHvvsHkC2t91XtUslpZBEnCRGjw2c/H4F9y7/xV2t27Z+HG5oNNbi41A6ESY14waXAyJd10JfnM84qcfvrNcj1RZK9hmM7GYVgJJq4tCGUPnXCeMnqYQOZELiur0yhXBaKYFF6So0dLI5EmsrdBKcZ1LZagsp52dhOjSZOUEVXO1gKsuxef0quj5+WZRL6PC4KMVdMXV6plL+gXOZb2yxC5y1fM593MzSgQQgeaaTrZRuajNLemrCrIZer5NClUK61YopBMIDDJ0bOg4Vnr0ELrsUUoJpeutzd+9JUAvIMblqkBqmLmqTgLDMEBVC16D1KbEdXVGEgKIDB28VgLp2mtpvFDhSarrfwOtqxwkVCEI1o03Hb26FkXE7QuNoEBpGIvVNZGhWUMW2qxdopkWIR7KXHGvmnKy6AIsRqpXrNYn0vOAlg10NVQs2cQFnERiKNk0dFpslaEdsmHJc6Vd/P57O2wFYOiZZKtnXr9jY79xxmT/CyvB8E+9/8soAAAAAElFTkSuQmCC")

/***/ }),

/***/ "./images/data/buttons/RS3_preset_07.data.png":
/*!****************************************************!*\
  !*** ./images/data/buttons/RS3_preset_07.data.png ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports=(__webpack_require__(/*! alt1/base */ "../node_modules/alt1/dist/base/index.js").ImageDetect).imageDataFromBase64("iVBORw0KGgoAAAANSUhEUgAAAB4AAAAeCAYAAAA7MK6iAAABhG5visiSAAAAAZub1BFAAAAAAAA7Gu72AAAAAlub1BFAAAAAAAAAAAAoYpy1QAAAAdub1BFAAAAAAAAAFrm3tAAAAAZbm9QRQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAzWlrwAAADiklEQVRIx6WXPa4dRRCFvxpNhIgwudPr0HaIZRMh74EdIAErACSHTizhNXgffvYj4snsAx4ZWHp3ZuoQ9F91z1wnjHQ1P91dVV3nnOq69vLVdzIMAEmYgQDDkASAWR5HpLlpRruXtVbv5Yrf4zX7ary5+hgMkZ6HV7p1CnOa8xbcsKjsJr9/++wz5nUTi69dNJ3D8Yp+xmeUnQwOBzvbJuZlgXVb+V9XzLpHSOggKvdlhXldYPW1wyViUyxG7I5wLJslZ38/V5U75zPMyyI2X8Fsl1l5M1bSqeJAwSmWsuqRSPmbhNnUkXddxHx3Bne/ABwjq3rwK7mojpItOntmytOS7bszzMtZyAWmzllH5B1B1G5hkjoxqISTgrE2bzmL+e4OpA1kQ5wcMv2I8MoExpOZTrJWIGqEO5+NedvKTO0cSgPG4XsNoBBHjRfVp0FFUYVesCxi3rac6gtXjP6H73/sxk6nEz//8hO3t7efXqsmKwAXzO6GyfeUCjWgXK9/fRWcPgDE33/92Wd1J6teCWbgG8zb1ue3iNyqfjhE9eHDR1y/f9cqVq2i1tKqPmNlbNtgchdyx9zBHXMlYNwTBJ5X12/OvS++5HR6wB83N8gdXJgSZHLP85MyTGm9gl13Szs2qWdrSQutDEZVPXr8mOv37zJTm6qsw0kgC+dYroC5Vk8pwBRxF51UI5fCu8Q3z59zffW2zi9rFX5VQnUd1Y47zJ53fLFW5PdyDj95+jUffr/h4z//7o7LjkgHqijz3Uk7JkRlQaSFDC1a+OrZU367eouRd0r7JXj67FDHyfPJO1ahuYUIFZqMXuMvX7zYdROfquu2G6upzgSRdqe9SsG3fck8FrzG130xQPgq5s1bGpmsFd5w6uBDULGVUayvYYceJKI2DpYqlzwdTIKkYfb9VdfhqJHREVOWyFE6bICrwNjIlQkgshTq/YCaoQBbPXUK83tiKb/XbjWv3xzm5Nhad2iGhm4zEsQOjqvW3lir06VkhtIRT7DZFYk1nMnyLKk23trXsTeo5oOd3l4hXMP4oI81m3q2K4FWTRWyDMydbGpqGNvdvDphrL0OzaaCeGje7bj3sg6LFGgHl5JacgaL5GZ5r0UrizScGBrEaYO4LRyLae+1Q5G8FilJDePmYKxaDH9ptC/kUWsuNPV1ezzTrXQgCO5/fjpubI/+kRx1GBcaYrsQH4L/AJna8zL1aGwxAAAAAElFTkSuQmCC")

/***/ }),

/***/ "./images/data/buttons/RS3_preset_08.data.png":
/*!****************************************************!*\
  !*** ./images/data/buttons/RS3_preset_08.data.png ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports=(__webpack_require__(/*! alt1/base */ "../node_modules/alt1/dist/base/index.js").ImageDetect).imageDataFromBase64("iVBORw0KGgoAAAANSUhEUgAAAB4AAAAeCAYAAAA7MK6iAAABhG5visiSAAAAAZub1BFAAAAAAAA7Gu72AAAAAlub1BFAAAAAAAAAAAAoYpy1QAAAAdub1BFAAAAAAAAAFrm3tAAAAAZbm9QRQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAzWlrwAAAEAElEQVRIx4WXvXIcVRCFvx5vYC2hlxSlhszanAjEM2AVT8ADOMEEFBRQQBEQgW0SoHgDEThBBaGr/ArICrWpVEi704fg/vWdHRdTtbU7M/f2zznd5/baN99/LCaXJMwMKb0yM0BIYMbk29IewOpe8t28TTNjMe7Eb2f/prdp596mZDZc0XtcUvcnY2VZt9+Mk3cPWOxG2PoWw8BCZK5mzbrQs+PiaOI5rDUKGn3gu/Eui+0WduNuPyO0l+jsFZ0b4P+33tjtyI59N3lnlZdyX5BgyqPCvdKzfZ7VEnLY3sJiuxWjj71DV+YnwWrqC6qCElPWhHZN4WjXdisWtzfgPlZ+LGTaFdLESMueHus5G5PrpmTs7smQkiO5EBlaFa7VEixwY3WdVFIuK+ezBdjeisXNDVjZBCjiWQwpmNEec3hBIAdZG7LUxsTx7S0sxh05Y/YFIlj30C2a6y7NdL5mVSBV9ehpt6qDDOEcSoIHR0ccv/8B19fXrFYrnv78hItXF51CxU6Yu0Y3Fu4G7jUVA8y057hU68MPT/jqyy/YbDas12uO3zvm2dMnnaRmzrCgMlEPfYRhHDMHmWdDqZ26Z6nFEFxfX7E8WGKIe/dWXF9dIfe6t7VRxlievl3V3jiKhTsp4yk5slYUaoE8++lHHp58xGZzCcDvv/6SizPlVfO03p7FenFjGMfcGopZFt5LtStDKR4crdlsLnn54gWr1Zscrdcor7WiYiVzV30X7bSMSysF6VM8hHKkh4eH3H/7Hb7+/DMAXp3/w6NPHvPX2VltHytiI+/kPMmlcsYw+Jj6WJ6y1ijIv3F13MjFcrlkebAEiYO7y9prJpB7qgX3fJ+RVPaWbbjDwjOsRbmsa77MmBJhF+fn/H32J48ef8rmMnH8w7ffZf1qyDRly5SF6rYcw8JHKqdRh4XCsyZdz09Pef7HaX8U1oKcDgXzw0SCOkDZovUG8Z78qAvUNDOkSK91mvpYDEm5wsdnepGAiixUXku6fGprRtg9BKsCtUe0YhZq9ougWDs42qRhuWK9Oy7ruV4qJdDmDoO8FYIx4ToMbQTO5f0RmZwKj5TVU0k5NqvPWsbWenhv7JmMOvH8lWAIe4fJOFQRUM9ZKi4lQR9syDWmHGRTkvjO1Li9Y0MdCJLEDrU+Bhvy80Bh9u+Cwb3JoxV+a7RDg72eXBmyrM13hiHMap4LyLvhECwUbW6nxnk4uLpBXam9wsiTMQUXnvU4+mjDfJFgT3vM8hSai6s6M2CwFqkXElP2ZkMrKCt1XzjvS7L0ipciaj2JqmRanBjyaWL9bKOJwBgpwKJykuf7OHlaOyDCFOqCBYK33ri/N2PtIT4nha/5dzN33/12+A+VlETukh9k5wAAAABJRU5ErkJggg==")

/***/ }),

/***/ "./images/data/buttons/RS3_preset_09.data.png":
/*!****************************************************!*\
  !*** ./images/data/buttons/RS3_preset_09.data.png ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports=(__webpack_require__(/*! alt1/base */ "../node_modules/alt1/dist/base/index.js").ImageDetect).imageDataFromBase64("iVBORw0KGgoAAAANSUhEUgAAAB4AAAAeCAYAAAA7MK6iAAABhG5visiSAAAAAZub1BFAAAAAAAA7Gu72AAAAAlub1BFAAAAAAAAAAAAoYpy1QAAAAdub1BFAAAAAAAAAFrm3tAAAAAZbm9QRQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAzWlrwAAAD+0lEQVRIx5WWvY4cVRCFv7rqYHeWEIeeDS2n6wcgMj8JXgQZj8ADICTegGBlp4AECSQIkVpEi3BkyyFyajLYJdyx6Olbh+D+du/MGrc0mtvdt+tW1alzquyrs8/E3ksovzWz+RsJM0MIFnuEMAypmTaz+g3AECf44bdX9QCsWl4+yOsb/GzHpH1mnZ383ODTdw4ZpijGuOWNLu3w52YXZnfT9oBhmmDyaR7IvsDeMOB91xRh2I4QPfaoYrKK4wwjbxhJc8szDFVwZpaO8n47wrDdiujT7ox2xYDmcPW1pgInYN2+8qzADcn5cSuGf0eI7ik7WgL5uhz+39x3ngrGMada7smbQo1dhWydM3vuq/O2M311+3YUwzgC7igfoEWwpnkCZiTT3AcV9qg720o9NMTH0VJVS458jtsy4dJ1XPvoZrgWhwzk5bmyPWOaYIhOrVa5boRNgpOTE969/x6bzQaAb779uq7pU63ibMeCnM7oIvgkTA4eMQlzh/wzeX6X/o8ODzh98BGPHp7x6OEZL178wemHp2l/vzfvJ9tVjBCbHY9GiG7Nm/xvfe2orW/fXnN5ecGrzQYDfn38mJN799J7bzbk6VfWDZe0J0YY3JW55zOC2LKQgH8uLlivj1kdHrC52nDn7l1Wq1WKpOa5ExEtxCUbdochRtqH19iZuky5Lv7+i19+/onPv/iSy8sL/nz5sgLbO9lUrTlRrbjjUQzu7UOr4RpW+aOZBjw5P+f383PMjPV6zfr4OB/YyjplMB/qSvJpja/RSQdbrraqxdKsOns5XK2OuNpcIRf33/+AJ+fnKHoTpuxoCAG5Z7+TkSqt5eCy2To+lLVZwOWV/g8+/oS3b91idbTi+dNnPH/2NEVbAu6JrQJXl7k+4lYFXJMuqcdf/Pj9d6+RcNUuV7LVppEUlDsMHjVnvkolWMO+l6RdramX7K4ZUMYjeXYivfMoQo1YdL9UFGAZ/3ZfndMiZLOUZp95gWIJqNlfFFdLuaQZLazQRaqDnOVBsC9GIYIFcOE51QHD3QldNt3JEaMdrVNNwQpdJELGK9ElOeP5PmDIHc+Oh9wra8FlIakHS7taUurP5ZBlk+1rsEGenAl19CiSa7N1pVOVtNm8sqBHER45gbBHsbjevI3UQCzk75UwlpLAl5moF+d6AGlKCSEkmninZqHxVsrCkbFUbhxlj7vXdZD6eUhdhaviLAlC5qKn9SznnjEPVpsNLkKwhWym54nH6owE61pYOlBZBQxL49GsbbWiCRby7AbCM5aZFSGkKScrYcZY14rKQglYs3Kykq7MW8m7FtiEp3aknO4mIKEmdpDD8Vt39o46vWj1iOxaL5rZ7hkuJ/Q/u2UqK+IPzZwAAAAASUVORK5CYII=")

/***/ }),

/***/ "./images/data/buttons/RS3_preset_10.data.png":
/*!****************************************************!*\
  !*** ./images/data/buttons/RS3_preset_10.data.png ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports=(__webpack_require__(/*! alt1/base */ "../node_modules/alt1/dist/base/index.js").ImageDetect).imageDataFromBase64("iVBORw0KGgoAAAANSUhEUgAAAB4AAAAeCAYAAAA7MK6iAAABhG5visiSAAAAAZub1BFAAAAAAAA7Gu72AAAAAlub1BFAAAAAAAAAAAAoYpy1QAAAAdub1BFAAAAAAAAAFrm3tAAAAAZbm9QRQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAzWlrwAAAEZUlEQVRIx4VXPW9cVRA9c3nNJoIC1gUSsl2RNRICnFAF0ZEGCdIipFCQSIhfQU3BDyChAAnRkiokrvgDlF67cyyElISGwgbve3cOxZ07d+7agSet9u39mJl75sy5s/L1N18SIMoj+P93G5EEUvHfz/q+9nvQDPz46z/g2oKyhO4ELO8EIQBgY3VU3KjUyACqjYjvBYBP37+EYcrAmMeysHOLEEz2cVIBEQgyaMEUJw0dSQJmlkDqXLCfMzFMEzAxN0RC0P77eSjWR9dQ1bidfpD6jJNgGEdBZgaVIbh+IUELXppTRTmxAEkEYNlbxwo6ZjPEJRBMIzCMIzFNUyANUNAUz52aVREJdGuGswVV808twaiTL8AhgtVIDGdnhGr2XIhISxfYnV4DKh6/1LliQs3GpLEitHtfrYBhXJkLVcckQqSqSPWkXEu5sKQG5bQMkyTNjgS7JYBxRQyrFcBcTuyLIVCDT0BjrzRDxbIzTKnmILC4RuHf8BI9O0NhdYlEfAGNpnW8kssKuL0rGzrVvnaVc2FR5AkYstpshAYNlsuXL2H3nV1cv/4e7t//GcuDpcM3m81w+/M7AID5fI57393F8fFxd/CLnqymXNDiJEkIwFDaeOVlzGYzjz+BoBIEcfPjmzhY7mNv7yGuXFngxgc3cO/ut7CC8OqN+kEWd0lzJZaCSmglma16fPQYj355gNOTE1AVmrWwn8RisYO9Rw8BEgfLJXZ3rxZnJlpUOprlU95zBgZVdESQtcww4CVep+rwRoQOlsuQMnNeNZ5N0lSBISuRYNFJI5SEJLlyawuOkU1sgkPVJpDs9Vdcqy3H6osJIawm1eozlq0lyCTx9PS0BIwiHJtb21Z+Mcc8p/GqRMrZDJKA0vOHejrSc+V1ruVkh/v72Nl5w/N9uL8P5oIgtByi5rfwiMYjwQuvL6599cdffzbJTMnzCRFsbm7hs9t3sLm9hc3tbcw3NnB4sIRAcHx0hE9u3cLutXfx5ttv4acfvsffpyeWDoGXRoBaALz60hzy4Udf8LffDy+++UzN6q542XvNCzDf2MCzJ0+7Pd3etZvu6msLJJ147pqVyOhKMBY2MzJVSwk+e/K0dShhTgIx63yCQDORsl/eTTRIWL7XatLMSGVsbB58j3HFiFm1324JWyZWxxoEvZaGtOjFpaeQrmO6sr/og6xTuVZa5Vszkeo9WmtTXDbbeAyqwiK1aUCra+mO32rKYZeiD6pAKqIgrcljU6moPPG6aVejNBgjS1hPG5uLljrVKpnoW+vqLEm94OmBVSM0KwJAknjwiExwsy0IglACibGzdIepqJaqO6t1WUslibgDqgYUAio1Jehb53I7aWBmklAS9OavE1pzTu07DKoaSQkkg1akv5gDfwZqaNwseoiUvyiuu2EjIuM69l3YoZQ10rUjVCApw0BoHZp4BKfeUoaarimSAItXgATxoHc1SmAAga0XFy0g9gFK7J14Lvj+T0f/T+X54wT+BWzueWvDQL7JAAAAAElFTkSuQmCC")

/***/ }),

/***/ "./images/data/buttons/RS3_preset_11.data.png":
/*!****************************************************!*\
  !*** ./images/data/buttons/RS3_preset_11.data.png ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports=(__webpack_require__(/*! alt1/base */ "../node_modules/alt1/dist/base/index.js").ImageDetect).imageDataFromBase64("iVBORw0KGgoAAAANSUhEUgAAAB4AAAAeCAYAAAA7MK6iAAABhG5visiSAAAAAZub1BFAAAAAAAA7Gu72AAAAAlub1BFAAAAAAAAAAAAoYpy1QAAAAdub1BFAAAAAAAAAFrm3tAAAAAZbm9QRQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAzWlrwAAAD+ElEQVRIx41Xu45cRRA91b6BZ4UcYDtASDsbeWZTRIQDPgCJH0AyAbYEHwB26NiBP4P/4AfIsORsd0AiISJBzNyuQ1BV3dV37grfCWZuP6vqnFNVI2/e/kBAABBnD2FTq4+kRfHOlf3rZ0+1Aj//8k+7gyAk3UYSIpJ+FxDa1uT5bpOAjDW0a+k2APjmywtMdRac6pwcYLJe+k/6TtbkQIwBAmlGMBawh03E5gFgrsB0molZ5zNP73rW1p1FyS8+O8+dmGdgOp0EM2c3Pll9x3c7OIUOzdvxNxP8AosMSRyPwDSfCNXqYZDGBQIQLiKPfhk9jBlfah8jExI67j2diOnfI1BrXWGm3EFvnhFpwHwttsEDSR4fj2ygjxs5vgrX7VAO9wTJmKPh54fnpyMwnY4CarUNC78HBRJJHGIw+ITtJUBp+0QEUB3sjL2G8QxQw8KOKZPDsniHsKmrx4mNdERSIhe5BMbqUqsziDQDqO0bJC42Gzz94ile/fQK+93O1qqt39y3uZc/vsT+yb6Nkwooh3OA/l6VmLQC4sEngSIAqShO70cfP8TFZmMhJdNan7u/8UPVQitAyZLL3BFAKNAqmKpaqGOC6npW23W4vcHh9gb73bWFUY00AsHvh1scDjfYX187QwihdNw9zgFVpNBam8dsHktjoR3SCUwAClBB9pwkIQBaRNplbgiwkBsB1fCYOiQ4Jt0MzNaQJZuRzOuUg/ptXvsptFnzOA7rqX1g8ZBtyUTTJizXqFrkfHPP3zl92rgq/GKX00CFRYGKcDaLOEoIHuYIt3hpDJeKCJQKEYEqcO/J7vPXf/79VwpP5GsL0OX2Cs++e4HL7RaXV1d49Pgx3r97B4DYbq/w7fPl3G89gQAoUnqR8Rs+efAQ8tXX3/PXP95/UPn7kMe8KykNn5/52ac7FJ2Z2Nnxa3JoliZ8E/0k4S9iqRTpUkbyIL3amZxKZWAciukSkHx0upPaDQp2i5SGv80H4Zy8TXJ2xRTGiS6tRMM6igIcq+KGafRVDJrZnDmtKBATk8uotD4NKLX2hKFufgs7uxGkpUWJdYnN4XpJDWAJKYWngO8DtAIlamRLaMqhW5CmyzTm9gdjW283EEr6Ss/7xQ9QBYqmTeIf02To1j0QsXrb1qtHSX2+jHWbOqqCpmOQhrEXlKFTaF5JT/itwCzSW+CNAojaAmk1WJGb6kIjoCpQVuS2yP5B6dTtSc9UgYHW2ruTIt5MdC5QtfXmZGDMlb8ryz6ISB2lY1fuAWLNugTeDWvp0EV760azYSyS2dQNyGPBbGoHMgqA91Y9P0cq6NbnfxemYwUuP9r9b3Lk0MAPdBiLvazvG3o0Bf4DIiJAVAwUhmcAAAAASUVORK5CYII=")

/***/ }),

/***/ "./images/data/buttons/RS3_preset_12.data.png":
/*!****************************************************!*\
  !*** ./images/data/buttons/RS3_preset_12.data.png ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports=(__webpack_require__(/*! alt1/base */ "../node_modules/alt1/dist/base/index.js").ImageDetect).imageDataFromBase64("iVBORw0KGgoAAAANSUhEUgAAAB4AAAAeCAYAAAA7MK6iAAABhG5visiSAAAAAZub1BFAAAAAAAA7Gu72AAAAAlub1BFAAAAAAAAAAAAoYpy1QAAAAdub1BFAAAAAAAAAFrm3tAAAAAZbm9QRQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAzWlrwAAAEW0lEQVRIx42XO29cVRSFv310i3joIjoUhwpiutgdtkSHBAg5ktOQCGr4KxQgAn+BikiQf5BnF4cucZk4osFpkyiee/aiOO8ZJ8LS1cy9c+5+rbXX3rYff/pBAGCAQPlruf/ff6vn+/t1W5NH4/c7r+k8Igkzy0eEMKy+ou5k/5aNTg3kjtnqb3D9sw2meRbLuMznrVozSwEMLswwrAamPgt1L/Y5aogOJOZ5g2k5w6yYHvrbKydyFXRGhXlnVdfOLWcxzUsjeuzKm8PTaslBnjPtn6/WXXRwJY+1QvlzXhrT6VLMcVmzUa1WCkLeIaAOke5s8m0ZmvFMcuyD4+VSTMtTw125zraSQveo4t2ixwy8EqI9772rwyGff3MK0+mpkLwh2UeNDSTKNUCuxnVLQa3CkqBJmRa6yR0MlskxIK+JZju5VELqGsharyc01BFSuaxk2FRtuFKQpWZvTmGa5xSZsp2CpWzEzUz4GXjXiqowv/1W+KFsvNiNM0wxptJBetizU4jFYsHO9g67u3v8detPnhw9GeRkb2+P7cs7LBYLXr16xY3ffhnbi+RZXWfEKCZ3w+Qdm3s04f3z59k4dy5ZcmGeSGiWUn398iW/3vgZML65dp29T3d5cP9eLWvtik6YPcIUIy3jjI/wevD58THPj4+5tLWFNVFFnsr36PCwlujFyQmLjUXjAF03dBhEh+AxNaTlC/d0SSBPTEwAJvYrZd5/ysViY4PtnR3+fvgwcSZfxaZirDZTxp7qMQ6CRCaJzMWUpUHuW9ay2r9ywIO7dzg5+be2kPJvYuyS6DC5FyNaU0Dr5I/sVLn1mtKJa99+x/NnT7l393YKX0Idu61IaE5ODpPHVDKttEYB2VqvACLIhmCuHFzlxckJ9+/cbvhnMbHVmZOFylPGfWtrYJ+AzYsfsn9wlc2LF9k/uMrR1mNu3byJBePChU0+/+JLjh4/5tLWJwDcuvkHx8+ejqOyJpWqFCPYV19/r8N/joaRN4x+a2Vam3TBhnmc9DtDF0KT4JUxefmDj5jcM2lUZkwHdH7J3iJXij4MBjNDLkIwvHSDNREppj1CiF7uska4t2lk1uthy6o1fY53XBDa+Mx0cg33Ekw6o9kNcKlaCH1WhZlSnhFlaCQHNuxsaqJU1dFwhxBjUcOER3EQMEwQsr4qBzJuHkbotpXGB9XKpYI5ZqEm4g4hiVGKdGWcJgS6cZleXl2JrEmphFlAuUppBjfVK62ZMnbatqiUqReRoFx1lDcByRUxgxACwULt/xZKWyCChWonesY4FPOZgUEhZSlbX/ZIraIyrULoWjDP8LKQoRxQgiqYoahGrjozuwlSSOLytR6uG2Swiq0ByiSq7ZOX+sJ6d8dCYbV3/O8WN6+9Gc5c6N19+A9C+WzBV9Yyr3ubJY2UQ/DSh40hg3K1RdDyitT3n1Um0zlytbFYtwBvWuCCCcHmex+P+zCDRqx9f9dvq+cGIezWqv8AN79xY55vlgsAAAAASUVORK5CYII=")

/***/ }),

/***/ "./images/data/buttons/RS3_preset_13.data.png":
/*!****************************************************!*\
  !*** ./images/data/buttons/RS3_preset_13.data.png ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports=(__webpack_require__(/*! alt1/base */ "../node_modules/alt1/dist/base/index.js").ImageDetect).imageDataFromBase64("iVBORw0KGgoAAAANSUhEUgAAAB4AAAAeCAYAAAA7MK6iAAABhG5vUEUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJisiSAAAAAZub1BFAAAAAAAA7Gu72AAAAAlub1BFAAAAAAAAAAAAoYpy1QAAAAdub1BFAAAAAAAAAFrm3tAAAAAZbm9QRQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAzWlrwAAAEdElEQVRIx4WXvW5dVRCFv9k6BXYqFKdDcbokdLnuSBAPgARIpOIJoAlCeQsKkOAZqECCNCBRESmpIpsqTlwlNlSJqYgd5d6zZ1Hs33OuQ66Le3Tu3vOzZq2ZsX39zRcCA8T653Xv3/Sx/K3X2hg8Gj/cfVmPpOPCMCRhIYCU3xWj68YkYRbSbaVcrFpspw347IMNhnEUKx9B2bWRni1fGiMWOgOeTJgZQu2sAIug9BuaJtCDECMMq9EY49gO0QzXUP01KM7R7H/T7E5nYxxhGFcQFSeQTRyTE1KBc+4l2/X0WzlT7GBgmr5frYxhtRKjjzlCTTIt6AcMl1IAXqowJdBZDgNWAzIgV4nVSgyvluDRycUB92k2BmOpo6+zs0emXs3OvTtTqSB49UoMq6Uqaylw5StWMzXkXZFEy856VidEmjYgWKi88Rz4agnDcmlInokpEkDJkOTpijGB0izk3xvMVDF0cAOuSMjvUiDGcgnDOII8pkqZ4T5OYOmZnJxl2eQ6yFWzTUF4R9RkM7pXe26WWO2etJnK24ig/LyxucHi2oIb19/nlzs/c3BwkLRscOO96yyu7QBw//49dvd2z258Odui7egwxFGYPNcmpZqcGx4jW2+fZ/OtjWRHiUGWLHD87Dnff/ct589vcevLrzh+/oyjo8Mu254T5dnwCEN0owsHJm0Tjg6fcnT4lCtXr6bI3WsdDx4/AuCf42NOT09qZyuokUtTZRgSBB4z1EhYJci0Jdb+LBIJM6kM2Nq6wLXFgitX32Vvd5ejJ0+awx5t5a4YVWUXYhS4V5YaJQDPbFCWkqrR8n3y4l/+Ojzkz90HLBY7bG1daIGTbEnCStcDTCK6WsZ17liRl1Xd1WbmWfPZyMuTEx4/eoj2xcbGJoudHX7/7ddZi616rPc8QkisThCagCgsN7KgFKF500eJGiVniiLI2N6+xOmLF0le0RMJ1Z5rOaU0ndxzd5GnmlqoTiRx8dIlPv70JhcvbvPJzZs83t/nzk8/Asat27c5PTll89wmew8ecO/uH9XWfJiZ2mBxgX340efa+/ugHQzWzdxu6unsHl3bpv5ncemWAkks3rnM4KPquZA7EWX8deKfOKp2VbVJP+x9PQh1k8xHMThNxmX0BQu41BpKcZiiqwFVqzYb/mHeG2yCQhQMHhPo6qOv2KoNyDJmvWTWUlGnCiaNw6pE1V1zhyGWwV47Swk6KbGOTFVVtDFZatfBnyqSl758BqyTpKcGIqczqiQHdzzP39K3y3xuvTc0FLJVs1CDJZetv4MsnXEICTkjEDAZocgpR1cYUt4brcaW/yQRQsgab9BX0qlNKVQyVnJQVlUhgiUjIWcVbLYEWlslJe8Wh64DNgVXvhSyity5CN0+1UXsHpE8z+lCnq79i7aB9PvYZIvQ2jrsDoP8jO5Q74carXpBBusGbtlMra0dlWWabcI5dIdB/SG6IAoNbbbBl23TZtnM2lspASX4fvtUdrx97vKav+n/RW9+rxnSk3NrWwj8Bz3JjQoTVib1AAAAAElFTkSuQmCC")

/***/ }),

/***/ "./images/data/buttons/RS3_preset_14.data.png":
/*!****************************************************!*\
  !*** ./images/data/buttons/RS3_preset_14.data.png ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports=(__webpack_require__(/*! alt1/base */ "../node_modules/alt1/dist/base/index.js").ImageDetect).imageDataFromBase64("iVBORw0KGgoAAAANSUhEUgAAAB4AAAAeCAYAAAA7MK6iAAABhG5visiSAAAAAZub1BFAAAAAAAA7Gu72AAAAAlub1BFAAAAAAAAAAAAoYpy1QAAAAdub1BFAAAAAAAAAFrm3tAAAAAZbm9QRQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAzWlrwAAAERUlEQVRIx4WXvW5kRRCFv2qNBF5EhJcI2UReOyUERLaGBfEjHLHiAUCLnbBi34GAxyBhCTZiWSIeYCHjJ8KAiNjYyDPTdQi6+m9sw5WuZu7c7uqqU3VO1djnX3wsMED0a/MZzBKSc/U17FE8XmKnXoucjS+//wepL7CUIJ6FMKxaQmGoPQnM7NJDJNWF0NaJ269tscgZ1p4no+Qcxq1EaeXo5pxZcwwMS4Zc1TrhTY9eAUH4lrOxWK1g5avBzf9Asl6+EaCP2ytCm1cLi9Va5eAcEU9LGjRxiHfokhmoBFJ/K+iIeNX8qk5UtMyM1cpYrFdindcNf8PwsGpmDIA2wzmcKtGBvDjjrfgGOAJ6M2sZWK/EYrk03L3F2qIE3DWkM/y3+q4Y8TC6djHBc+F7z9f5EhbLpZB7g8jdSTVSbaTcooop0Q5EQFIg0rGu9OvBFIPLpVicnwvkeMBnKPJh3RBDZQIujwOGKq5eqHPZol4km+pztbTC4+LZ8FlDrSJQv7t6AVX73plzFSnqnpqN9RqSeyDgXrgoYYGzCbaeeppXX36Fe3fvcWNvD6RYR1svF8d3Tji+c4JcF+6+p9w5i+QZ8IzJwb18ykkSJuf57efY2toKR9TWKK/BM7hzePMmT578HWu6nc3v5TnjGdI6DxUUnik7Hvfpb6d89+1Dzs7OWt6K56XIrm9vs7Ozy4+PH4dK0XMuLkEIskNyt8KN7LGofFpku/DUwzlvhiyMf3D7Qx49/KbRpu4vMGeQN6SqQ54h5exdg1VzrDnnVc88qil+u3n4Or/8/BN/np7S+afBDqVeBrsmkR0W7qVEJQ9+bkjz0GHMAi6KcBy+cYs/fj9l/+CAa9eeYfv6Nu+9f8SDr+9PmiHN+u3lYEqEKgJhzPTEINXcuUiiicdnJ8e4RErG3v4Bh7fe5MH9rwYK2eC3mgK6VzpFPmuEFtpsBrs7u3zy6V12Xtzl3aMj3jk6ijXBaUL5RoSG1FkrsuJAMity+9bbH+mHv35t0tZ7bu0sGypWhcw17Zn2crFNju3ypRdukNzVh4TBW6uiot7SasE1MWB+N84p9X3CWndrOV6rQK3IX+dhjWjQWI187zlHCi20oO0wKkmtJ482smCRfZDkFm0dXVSoOzYo19zoB1nXgN7cNDT4XFBMhZtqlTwXSbUYBWf05j/we7ptgN2sdbe2R2Wkm6t6yOfYbnprtGni7ESt0Y7TRk9dtZnCETksfOOFWj+ulCpGFFYMsGQg25grbBgcuhNCJEu9CBEuSBIkS6Xk3dthFuNopUoyaweUicWmQquDgW1UcLXbRquQ7ahqtRbemrrNkld5y0Af6iydAlqzeea2WXK7PVjUwdAs9Tlq3MhYcVP1XTqhlDU2jyNi+kchh+S1ZzbxGA5tI+XA6SkK22CADeKhK/9reY1499n9yxxr/0hG522apeZ56/9+b+8d/gVe97bUG8xBSwAAAABJRU5ErkJggg==")

/***/ }),

/***/ "./images/data/buttons/RS3_preset_15.data.png":
/*!****************************************************!*\
  !*** ./images/data/buttons/RS3_preset_15.data.png ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports=(__webpack_require__(/*! alt1/base */ "../node_modules/alt1/dist/base/index.js").ImageDetect).imageDataFromBase64("iVBORw0KGgoAAAANSUhEUgAAAB4AAAAeCAYAAAA7MK6iAAABhG5visiSAAAAAZub1BFAAAAAAAA7Gu72AAAAAlub1BFAAAAAAAAAAAAoYpy1QAAAAdub1BFAAAAAAAAAFrm3tAAAAAZbm9QRQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAzWlrwAAAD8ElEQVRIx71Xu44VRxA9NZqAHTtjN4O9IUu6qY3k3BIExoHlwKklC4TEFzixLGGEgIDIoTMkHpHtyB9gkxmtI+8d8Qt7ETPTdRx0V3f1zCzOGGk1tx/TXXXq1KlauffgOyI/BAmICPwcILYKgV8rc36NjEf6c0hW4zYE4Jc/3mL5cDaW6gVytsb1vVye8/Vne2inkRjDWL5de//fc94+P+/OnKYLaKcATDrhQz7jCLTjAASGGBdBjJeLh/2Ob4ecLKNRQijv5cw4Au0wEkFDPIUlfHGvVPNgfbEPt8wMsblINIG/exqBdhiAENagFuehee0IU7k/93Qt0MXiYQDacWCmf01MguqclrRoc8qVe2gmgzP3mYwHiXeDoh0GZ7ltyPkYz8pO2tGsM2WeAIoa+hwpaiTXALTTBGgIGTmRKArUQhauZDadEZxRQQRQ/72Bk8bTBLRBGcdEBEiZmUMFuq7D8fExPv3kGp6/eIaTk5MK3J/u3Uff9wCAvu/x/OUzJMcKkIZHGgcVtBoE0FBBJc7jg4sX0e3tRcuUkHSqedf3Wzx+9DCFKDkga1QteGlIkmneVsxMFO63W2xPT3F0dDXu4Yy/jHu90RF7nKvvIRCtKpCxASBk8d5+JyaRjMEzMiXXbt2+g67r8Ptvv+LVX39CZJ4lLMEnoQq0GmJcZVaHPAaZvSyVxxYeP7gPIHLh+x9+xMnrv7Hb7c6XeBIhAE1QlzfUCJtdkP5kdpk4aA2J3e4M/fYUm8NN/o5k5ItHK3ncMF0smkSBBFXjbyWabEQKiSbmq6K7sBcvUeLypQ329w+w/fe0NljL2+ZVgTZohNAKhI+LALh8uMGNm1/icLPBjS9u4srV13jx9ClAYH//AF99cxe7sx26jzr8/OQJ3u7OaqJKERyLmQZAPr/+LV+9+SdXoPc9IpbfXF1b/X6lih1fuhLJZewtZQxFc91h9DKFWhM5k6gir1w0JxoYoY4jlvy086SurdCZQhCQxlDQok5ClNNkUUdiOilyLZGZJgu51kk5hLxHpYwKK4wWqaWECYhlrZQLHGSlstRd5KLnc/Cvs0UAEWiwdEoblbPanHPZTJDVYu/bpKpKYdkKVekEAo00JTZ0GiuFPYTOe5RYQul664R3aQmQC4jpoSrQevUx40igaRqoaoxXI1kyS1eXREIAkaYEL5dAuvZasi5YeFrV5X8DuatsfIx9NWfVCBKzVsQ8BysRsU3KFGMTBpEme0OTR+vwxP4c1k2ci/BqMk5mXUDiiKGSan1Leh3QuIGuhkpKNnGEk1oYYjY1RRZzB5o/SkOxfiJefPjxEdYIWPVMstYzL991Y7/yTTr7P41Y50be858WAAAAAElFTkSuQmCC")

/***/ }),

/***/ "./images/data/buttons/RS3_preset_16.data.png":
/*!****************************************************!*\
  !*** ./images/data/buttons/RS3_preset_16.data.png ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports=(__webpack_require__(/*! alt1/base */ "../node_modules/alt1/dist/base/index.js").ImageDetect).imageDataFromBase64("iVBORw0KGgoAAAANSUhEUgAAAB4AAAAeCAYAAAA7MK6iAAABhG5visiSAAAAAZub1BFAAAAAAAA7Gu72AAAAAlub1BFAAAAAAAAAAAAoYpy1QAAAAdub1BFAAAAAAAAAFrm3tAAAAAZbm9QRQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAzWlrwAAAD9ElEQVRIx6WXzW4cRRSFvzvqjUfsgncQL+Nk5/HSiVghhJAwCK+IWLGBvAdShIQi8Q6s4mD7EZC8A8wqzmRnG16BkTw9dQ+L6uqq6m4jIWo06r/qurfOOfen7fsXz2QYAJIwAwGGIQkAs+45Is6NM/IxvWv9MY3yfjka3xg//bIqFiKeDy6p3lMxJxvPzg1eSrvprp9+MKfZBNH6pvKmMjgcpZ3hOeqMDAwO1glBNG0Lm7Dhf40SdS8poaIoHdsNNJsWNr6peCm5SSuW3E3xmDZLh/54rnrtrNfQtK0IvgGzEbLyvFiCU8mACqNYRNVLIXX3JMxmlXg3rWhu1+DudxDHUFU1+b246A3FtajWM1M3La59u4amXQu5wFQZq4Q8EojyoZikKhiU3InOWJ7XrkVzewtSANnATyaVPiV4dQLG4zJVyFqiKAtuvTaaENJMjQxKA46L+70DSTjKuuhtGvQsKskL2lY0IXRQ3zG2tuYsFgseHzzh9OyE5XJZPT84OODxwRNWqxUXf/zO+fl55WCNVjxxQeNumHwsqW7y9r17zLe2Iu8SVmxpsdhnsbfg+fPvMvyjsKojwQw8QBNCjW8K8pSdb66vuLm+Ynf3YSGmCO3e3j5nJycZe4ti6mFVzXd6FgI07kLu/W6twKZHIUlVjrzY8f4+N9dXHH72OfP5nNOTVyzfvIm8p8ShCLAElqB2YxYCmIS6fy80RWhBkZRul6byGfx5fc2PL37g9OdXfPn0q3jfParMPapZitedjRBE456kPlBzma0qOecYX63+Znn5GgPeXr7m3e3tqvzlSjUQl8PMQ95F8qi87nfXQWWKqREXF7/+xocffYxcPNh9yPLyEjyJMP7l6uejeHQn7rhKe0WtNYz37+9weHTE/Z0dDr84YvnwkrPjlwCcHb/k62+fsfvoUXd9HN/XVIK1vna7g33y6Te6+OttVU0oksOwc5i691/H4r0HNB46zqRRte8VbOOUOQr4QQazqoOpmfaNaILnesrMcuIt4McHTpWtjGpF9ia8iEWVirWYueSxMAkwn9qW6g4nhRTgiFkfnWM4THXpTKUxqtpTGVT8KcWsxnAOErAph2L819EgcqTklCpCr+q+H4owa9Btlt2TTZSr3N5YztMpZfaI1RWscZXCGtRkeZdf8/MyKdhIZFYRY4P1kuAyxxN9rNmsVrsiaVVMTih3ZrMin2ss1D5zadxmmM0S40XzbtO9l1VcREcruhSjpUMwhVwjr2PR0kvD0qRBcNoguK0oi3HvRcLxbvMx+fQcZwNFbFbdXvG5Yv/yZeFCs+IjYhjrnVsuaBDsvLM73dhOfZFMdRh3NMR2h38I/gFMbvhZhSZ4IwAAAABJRU5ErkJggg==")

/***/ }),

/***/ "./images/data/buttons/RS3_preset_17.data.png":
/*!****************************************************!*\
  !*** ./images/data/buttons/RS3_preset_17.data.png ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports=(__webpack_require__(/*! alt1/base */ "../node_modules/alt1/dist/base/index.js").ImageDetect).imageDataFromBase64("iVBORw0KGgoAAAANSUhEUgAAAB4AAAAeCAYAAAA7MK6iAAABhG5visiSAAAAAZub1BFAAAAAAAA7Gu72AAAAAlub1BFAAAAAAAAAAAAoYpy1QAAAAdub1BFAAAAAAAAAFrm3tAAAAAZbm9QRQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAzWlrwAAAD/0lEQVRIx4WXu24eZRCGn9lskZiOhA7FJZvSThmCOxQJIZAIFTeAhAISogUugCISXAM1cAdxgquE1KYjQTRgSg72/++8FN9pvt0/YiXr38M3p3dm3hnbV/c/EotLEmaGlD6ZGSAkMGPxa0kGsCpLftqt08wY56349vjf9DVJroSS2nBF6/FIlU/KyrFO3owP3rjCuJ1h4xsMAwueuZo261zPhouhheVw1iho9I5v58uMmw1s5+06IrQKdOcVjRvg/3fe2G7Jhn27+GY1L+W5IMEyjwrPSu/WeVYLyGFzAeNmI2afe4OunJ8Eq6kvqApKDFmLtGsJR7s2GzFenIP7XPNjIdKukBZKWvT0WO/SsbjOS8TunhQpGZILkaFVybVagAVurJ6TSsjl5O5oATYXYjw/BytCgCKeRZGCGq0yhxcEspO1IUttLAxfXMA4b8kRsyaIoN1Dt2hXd2lH52snC6Sqnj1JqxrIEObnvb09Dg8Pef3Wbb7/4TtOT0+rgo/vfdIpnKaJL778nLOzs475ltfsxuhu4F5DMcCsOXLt5avsXb4CKKXEW6N+8/X9SpvTNAHizz9+T9AqVUBRHPnQZxjnWa0KC2zeevf5s1/49fkzpulGwqz2doDSxcHBISePHtYCbRg7XaEA8ywGd1IUngvMlSy7Y1pEKa+FKBdyx1y8cvUa03SDn548Bnc0zyksZb1ZV7oX7sY4z7TK66okwGPU6cSqSsXBzZv8+OhhIhoKiyVdkU3XEdconEJByZn0m0o6tN3i7807dzg5fhDOZBTzd1NoDRfuMPqcDivkt8thIC3Ju76R4PbREU8fP+Gfv/5OGCkVp2GpQ4zcJV5l3GHwAl+t6hRpIYP9/X3uffoZ1/f3effu+7zz3t0WicGtoyNOjh8kiCO5lJRI2eGSphSxvfX2h3r628+r6aTlWFyOv+X9kllezJgcvvoag3vIV/U2VPmKftS3lXYsKVrO8t4Dn8Uwe8ilcgEoToMgK+VqJXBqJp0iUVsvmPXgbM7xGEhrEYWafldrh0IEHjA1qwYt7GFFzoj0mXI8pEJV8zhAbmFpq5O+RBAXjNyGHlNW+13ZN6vvWsTW1pfV2rNYdeL8lWAIssNiHaoIqM9ZaCdjsCHXWO7FsNLEb6aW20s21IUgDYWh1sdgQ34fUpjtu2jMVeHuBsHQYK+TK0OW6fHSMIRdrbCVd8shWCjaTCAt52FwdYt6JoCw8mRMM/0ppKKRckwf8iRjlrfQXFzVmAGDNU+9JDFFbza0grJS9yXnfUmWXvFSRK0nkcNYV5q6MeTBYP1uowXBGMnBwnKS5+e4eVqbemELdcGI4PpL02rHWiHODmp8wX83u567e4f/ALTkO8YfJgy4AAAAAElFTkSuQmCC")

/***/ }),

/***/ "./images/data/buttons/RS3_preset_18.data.png":
/*!****************************************************!*\
  !*** ./images/data/buttons/RS3_preset_18.data.png ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports=(__webpack_require__(/*! alt1/base */ "../node_modules/alt1/dist/base/index.js").ImageDetect).imageDataFromBase64("iVBORw0KGgoAAAANSUhEUgAAAB4AAAAeCAYAAAA7MK6iAAABhG5visiSAAAAAZub1BFAAAAAAAA7Gu72AAAAAlub1BFAAAAAAAAAAAAoYpy1QAAAAdub1BFAAAAAAAAAFrm3tAAAAAZbm9QRQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAzWlrwAAAEUElEQVRIx5WWv4tdRRTHP2e8avZFbPZtIchmbUwIiPo2nYpVYiHYm2AstBD8AywEESSoWFgbs02QtGqpdsEypFOSzmzEJhvICnnie++er8X8uDNv3ybmwvLunZmdOfP9fs/3HPvq6w/FoY9QmjWzdkbCzBCCpTVCGIY0bG1m5X8Aun4BV67+Uw7Ays7LA+n9AXEOx8R1ZtU+adzg3OtrdItezPo5j/RoRTwPDqH5WsyP0C0WsPBFe5HDLvaIFz7sWfTQzWfQe1+ziskKjw1HPnAktTs3HCrzTANHnp/PoJvPRe+L1YhWYkAtXbXWlOkErFqXxzLdEIOfzUX37wx694iOlol8GIb/F/sqUsFslqCWe4wmp8YqIVsVzCHfJXhbCV9ZPp+JbjYD3FE6QEuXNbUANEmmNgbl7FF1tmU9DIzPZhZVLTnylrdlwKWDvNa3a3jNARnI87jSfsZiAV3vFLXKdYC20WjEZDLh1Vde44cfv+fGzRvN/OTlCWdOv8F0OmU8HnNp51t2b+8WMTZZkODsXXS+ECZP8MRw6+g31tcZHVmLsUqYezN/9u1zfPH5Bfbu7rE92ebM6TPsXLo4oLUiG7w3Qu82RJN+reJt99Ytfvn5J6bTaVlXz0+n9zk6Ogou1tfHTO/fR66InobfQr6g76FzV8o9bxLEVgjJELiXSQGXLn7D2XPvsLd3B4Ar312O65p8TuaSNnaH0PdR1aYIJek33s7LGMTo862Vxifb2+zt3eH6tWuMxxtsb5+q1nkKQoPK3fFedO4R4qzC/GIlf1qLz0GZGZubm5w4cZIvL3wGiNu7f/DRx5/w69Wrg+u5on3aAFPvENxjrpqEeo8HuaNeDVeDBhJ3fRTkaDRi7ck1cDE6MipzIWEqT/SkPSPv8Njzx099+tf+3SU7tyQgsbX1HOffe5/NY8fY3NpivLHBzd9/w4D9e/s8/sQTnD3/Li+8+BInTp7k8s4Of+/fq4xNjZEZ8MzTY+zNtz7Q9T9vPrL1PrQMWm2lUVy5M5k8e5zO+5rLZDtWvG6wxLqbOGBhlWVXxYDcHmWfSHPeK3I8cJj/oijAklcP3yU4LV3PLBLkTRSRV6zZv3eiqk1tn6Uk/1zsLd2cCi5LjaDZ4HZCBAvgwpOCA4Z7EltC07OqlwkyG0Rh5U5RkSHzJaX0E56+A4bc8RR4SLXS8i7JSMrB0qqSFOtzPmS5yNblc6A8BhNK68FQA6p3FaizpTX9Sp1Yw+NyAqFQU9vqcIGlhkGOWUj/r8ixBLhKT1QndDmA2KWEEGKX4pWbhaEgS8Q1ictoPsMady/vQar7oSWXohJZSFXM43uDefJmC1aKDS5CsCXbjOPu0LmqTYJVJYyS9DlVZMtlaxBNsJB6NxCeuExZEULsciTMQuZYB0RlIV9YjZwsw5XyVvKhj66MJ49ZgnswkFCA7eRw7Knjh/TVbR9VM7LqfamYre7hEqD/AT4BPYXhpTp0AAAAAElFTkSuQmCC")

/***/ }),

/***/ "./images/data/buttons sync recursive ^\\.\\/OS3_preset_.*\\.data\\.png$":
/*!******************************************************************!*\
  !*** ./images/data/buttons/ sync ^\.\/OS3_preset_.*\.data\.png$ ***!
  \******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var map = {
	"./OS3_preset_01.data.png": "./images/data/buttons/OS3_preset_01.data.png",
	"./OS3_preset_02.data.png": "./images/data/buttons/OS3_preset_02.data.png",
	"./OS3_preset_03.data.png": "./images/data/buttons/OS3_preset_03.data.png",
	"./OS3_preset_04.data.png": "./images/data/buttons/OS3_preset_04.data.png",
	"./OS3_preset_05.data.png": "./images/data/buttons/OS3_preset_05.data.png",
	"./OS3_preset_06.data.png": "./images/data/buttons/OS3_preset_06.data.png",
	"./OS3_preset_07.data.png": "./images/data/buttons/OS3_preset_07.data.png",
	"./OS3_preset_08.data.png": "./images/data/buttons/OS3_preset_08.data.png",
	"./OS3_preset_09.data.png": "./images/data/buttons/OS3_preset_09.data.png",
	"./OS3_preset_10.data.png": "./images/data/buttons/OS3_preset_10.data.png",
	"./OS3_preset_11.data.png": "./images/data/buttons/OS3_preset_11.data.png",
	"./OS3_preset_12.data.png": "./images/data/buttons/OS3_preset_12.data.png",
	"./OS3_preset_13.data.png": "./images/data/buttons/OS3_preset_13.data.png",
	"./OS3_preset_14.data.png": "./images/data/buttons/OS3_preset_14.data.png",
	"./OS3_preset_15.data.png": "./images/data/buttons/OS3_preset_15.data.png",
	"./OS3_preset_16.data.png": "./images/data/buttons/OS3_preset_16.data.png",
	"./OS3_preset_17.data.png": "./images/data/buttons/OS3_preset_17.data.png",
	"./OS3_preset_18.data.png": "./images/data/buttons/OS3_preset_18.data.png"
};


function webpackContext(req) {
	var id = webpackContextResolve(req);
	return __webpack_require__(id);
}
function webpackContextResolve(req) {
	if(!__webpack_require__.o(map, req)) {
		var e = new Error("Cannot find module '" + req + "'");
		e.code = 'MODULE_NOT_FOUND';
		throw e;
	}
	return map[req];
}
webpackContext.keys = function webpackContextKeys() {
	return Object.keys(map);
};
webpackContext.resolve = webpackContextResolve;
module.exports = webpackContext;
webpackContext.id = "./images/data/buttons sync recursive ^\\.\\/OS3_preset_.*\\.data\\.png$";

/***/ }),

/***/ "./images/data/buttons sync recursive ^\\.\\/RS3_preset_.*\\.data\\.png$":
/*!******************************************************************!*\
  !*** ./images/data/buttons/ sync ^\.\/RS3_preset_.*\.data\.png$ ***!
  \******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var map = {
	"./RS3_preset_01.data.png": "./images/data/buttons/RS3_preset_01.data.png",
	"./RS3_preset_02.data.png": "./images/data/buttons/RS3_preset_02.data.png",
	"./RS3_preset_03.data.png": "./images/data/buttons/RS3_preset_03.data.png",
	"./RS3_preset_04.data.png": "./images/data/buttons/RS3_preset_04.data.png",
	"./RS3_preset_05.data.png": "./images/data/buttons/RS3_preset_05.data.png",
	"./RS3_preset_06.data.png": "./images/data/buttons/RS3_preset_06.data.png",
	"./RS3_preset_07.data.png": "./images/data/buttons/RS3_preset_07.data.png",
	"./RS3_preset_08.data.png": "./images/data/buttons/RS3_preset_08.data.png",
	"./RS3_preset_09.data.png": "./images/data/buttons/RS3_preset_09.data.png",
	"./RS3_preset_10.data.png": "./images/data/buttons/RS3_preset_10.data.png",
	"./RS3_preset_11.data.png": "./images/data/buttons/RS3_preset_11.data.png",
	"./RS3_preset_12.data.png": "./images/data/buttons/RS3_preset_12.data.png",
	"./RS3_preset_13.data.png": "./images/data/buttons/RS3_preset_13.data.png",
	"./RS3_preset_14.data.png": "./images/data/buttons/RS3_preset_14.data.png",
	"./RS3_preset_15.data.png": "./images/data/buttons/RS3_preset_15.data.png",
	"./RS3_preset_16.data.png": "./images/data/buttons/RS3_preset_16.data.png",
	"./RS3_preset_17.data.png": "./images/data/buttons/RS3_preset_17.data.png",
	"./RS3_preset_18.data.png": "./images/data/buttons/RS3_preset_18.data.png"
};


function webpackContext(req) {
	var id = webpackContextResolve(req);
	return __webpack_require__(id);
}
function webpackContextResolve(req) {
	if(!__webpack_require__.o(map, req)) {
		var e = new Error("Cannot find module '" + req + "'");
		e.code = 'MODULE_NOT_FOUND';
		throw e;
	}
	return map[req];
}
webpackContext.keys = function webpackContextKeys() {
	return Object.keys(map);
};
webpackContext.resolve = webpackContextResolve;
module.exports = webpackContext;
webpackContext.id = "./images/data/buttons sync recursive ^\\.\\/RS3_preset_.*\\.data\\.png$";

/***/ }),

/***/ "canvas":
/*!*************************!*\
  !*** external "canvas" ***!
  \*************************/
/***/ ((module) => {

"use strict";
if(typeof __WEBPACK_EXTERNAL_MODULE_canvas__ === 'undefined') { var e = new Error("Cannot find module 'canvas'"); e.code = 'MODULE_NOT_FOUND'; throw e; }

module.exports = __WEBPACK_EXTERNAL_MODULE_canvas__;

/***/ }),

/***/ "electron/common":
/*!**********************************!*\
  !*** external "electron/common" ***!
  \**********************************/
/***/ ((module) => {

"use strict";
if(typeof __WEBPACK_EXTERNAL_MODULE_electron_common__ === 'undefined') { var e = new Error("Cannot find module 'electron/common'"); e.code = 'MODULE_NOT_FOUND'; throw e; }

module.exports = __WEBPACK_EXTERNAL_MODULE_electron_common__;

/***/ }),

/***/ "sharp":
/*!************************!*\
  !*** external "sharp" ***!
  \************************/
/***/ ((module) => {

"use strict";
if(typeof __WEBPACK_EXTERNAL_MODULE_sharp__ === 'undefined') { var e = new Error("Cannot find module 'sharp'"); e.code = 'MODULE_NOT_FOUND'; throw e; }

module.exports = __WEBPACK_EXTERNAL_MODULE_sharp__;

/***/ }),

/***/ "../node_modules/alt1/dist/base/index.js":
/*!***********************************************!*\
  !*** ../node_modules/alt1/dist/base/index.js ***!
  \***********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

(function webpackUniversalModuleDefinition(root, factory) {
	if(true)
		module.exports = factory((function webpackLoadOptionalExternalModule() { try { return __webpack_require__(/*! sharp */ "sharp"); } catch(e) {} }()), (function webpackLoadOptionalExternalModule() { try { return __webpack_require__(/*! canvas */ "canvas"); } catch(e) {} }()), (function webpackLoadOptionalExternalModule() { try { return __webpack_require__(/*! electron/common */ "electron/common"); } catch(e) {} }()));
	else {}
})(globalThis, (__WEBPACK_EXTERNAL_MODULE_sharp__, __WEBPACK_EXTERNAL_MODULE_canvas__, __WEBPACK_EXTERNAL_MODULE_electron_common__) => {
return /******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/base/alt1api.ts":
/*!*****************************!*\
  !*** ./src/base/alt1api.ts ***!
  \*****************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ "./src/base/declarations.ts":
/*!**********************************!*\
  !*** ./src/base/declarations.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ "./src/base/imagedata-extensions.ts":
/*!******************************************!*\
  !*** ./src/base/imagedata-extensions.ts ***!
  \******************************************/
/***/ (function(__unused_webpack_module, exports, __nested_webpack_require_2062__) {


var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ImageData = void 0;
const a1lib = __importStar(__nested_webpack_require_2062__(/*! ./index */ "./src/base/index.ts"));
const nodeimports = __importStar(__nested_webpack_require_2062__(/*! ./nodepolyfill */ "./src/base/nodepolyfill.ts"));
// //TODO revamp this madness a bit?
// (function () {
// 	var globalvar = (typeof self != "undefined" ? self : (typeof (global as any) != "undefined" ? (global as any) : null)) as any;
// 	//use the node-canvas version when on node
// 	if (typeof globalvar.ImageData == "undefined") {
// 		let nodecnv = requireNodeCanvas();
// 		globalvar.ImageData = nodecnv.ImageData;
// 	}
// 	var fill = typeof globalvar.ImageData == "undefined";
// 	//should never be reach anymore
// 	var constr = function (this: any) {
// 		var i = 0;
// 		var data = (arguments[i] instanceof Uint8ClampedArray ? arguments[i++] : null);
// 		var width = arguments[i++];
// 		var height = arguments[i++];
// 		if (fill) {
// 			if (!data) { data = new Uint8ClampedArray(width * height * 4); }
// 			this.width = width;
// 			this.height = height;
// 			this.data = data;
// 		}
// 		else if (oldconstr) {
// 			return (data ? new oldconstr(data, width, height) : new oldconstr(width, height));
// 		} else {
// 			var canvas = document.createElement('canvas');
// 			canvas.width = width;
// 			canvas.height = height;
// 			var ctx = canvas.getContext("2d")!;
// 			var imageData = ctx.createImageData(width, height);
// 			if (data) { imageData.data.set(data); }
// 			return imageData;
// 		}
// 	}
// 	var oldconstr = globalvar.ImageData;
// 	if (typeof document != "undefined") {
// 		try {
// 			new oldconstr(1, 1);
// 		} catch (e) {
// 			//direct constructor call not allowed in ie
// 			oldconstr = null;
// 		}
// 	}
// 	if (!fill) { constr.prototype = globalvar.ImageData.prototype; }
// 	globalvar.ImageData = constr;
// 	ImageData = constr as any;
// })();
(function () {
    var globalvar = (typeof self != "undefined" ? self : (typeof __nested_webpack_require_2062__.g != "undefined" ? __nested_webpack_require_2062__.g : null));
    var filltype = typeof globalvar.ImageData == "undefined" || typeof globalvar.document == "undefined";
    var fillconstr = filltype;
    if (!filltype) {
        var oldconstr = globalvar.ImageData;
        try {
            let data = new Uint8ClampedArray(4);
            data[0] = 1;
            let a = new globalvar.ImageData(data, 1, 1);
            fillconstr = a.data[0] != 1;
        }
        catch (e) {
            fillconstr = true;
        }
    }
    if (fillconstr) {
        var constr = function ImageDataShim() {
            var i = 0;
            var data = (arguments[i] instanceof Uint8ClampedArray ? arguments[i++] : null);
            var width = arguments[i++];
            var height = arguments[i++];
            if (filltype) {
                if (!data) {
                    data = new Uint8ClampedArray(width * height * 4);
                }
                this.width = width;
                this.height = height;
                this.data = data;
            }
            else if (fillconstr) {
                //WARNING This branch of code does not use the same pixel data backing store
                //(problem with wasm, however all wasm browser have a native constructor (unless asm.js is used))
                var canvas = document.createElement('canvas');
                canvas.width = width;
                canvas.height = height;
                var ctx = canvas.getContext("2d");
                var imageData = ctx.createImageData(width, height);
                if (data) {
                    imageData.data.set(data);
                }
                return imageData;
            }
            // else {
            // 	//oh no...
            // 	//we need this monstrocity in order to call the native constructor with variable number of args
            // 	//when es5 transpile is enable (that strips the spread operator)
            // 	return new (Function.prototype.bind.apply(oldconstr, [null,...arguments]));
            // }
        };
        if (!filltype) {
            constr.prototype = globalvar.ImageData.prototype;
        }
        globalvar.ImageData = constr;
        exports.ImageData = constr;
    }
    else {
        exports.ImageData = globalvar.ImageData;
    }
})();
//Recast into a drawable imagedata class on all platforms, into a normal browser ImageData on browsers or a node-canvas imagedata on nodejs
exports.ImageData.prototype.toDrawableData = function () {
    if (typeof document == "undefined") {
        return nodeimports.imageDataToDrawable(this);
    }
    else {
        return this;
    }
};
exports.ImageData.prototype.putImageData = function (buf, cx, cy) {
    for (var dx = 0; dx < buf.width; dx++) {
        for (var dy = 0; dy < buf.height; dy++) {
            var i1 = (dx + cx) * 4 + (dy + cy) * 4 * this.width;
            var i2 = dx * 4 + dy * 4 * buf.width;
            this.data[i1] = buf.data[i2];
            this.data[i1 + 1] = buf.data[i2 + 1];
            this.data[i1 + 2] = buf.data[i2 + 2];
            this.data[i1 + 3] = buf.data[i2 + 3];
        }
    }
};
exports.ImageData.prototype.pixelOffset = function (x, y) {
    return x * 4 + y * this.width * 4;
};
//creates a hash of a portion of the buffer used to check for changes
exports.ImageData.prototype.getPixelHash = function (rect) {
    if (!rect) {
        rect = new a1lib.Rect(0, 0, this.width, this.height);
    }
    var hash = 0;
    for (var x = rect.x; x < rect.x + rect.width; x++) {
        for (var y = rect.y; y < rect.y + rect.height; y++) {
            var i = x * 4 + y * 4 * this.width;
            hash = (((hash << 5) - hash) + this.data[i]) | 0;
            hash = (((hash << 5) - hash) + this.data[i + 1]) | 0;
            hash = (((hash << 5) - hash) + this.data[i + 2]) | 0;
            hash = (((hash << 5) - hash) + this.data[i + 3]) | 0;
        }
    }
    return hash;
};
exports.ImageData.prototype.clone = function (rect) {
    return this.toImage(rect).getContext("2d").getImageData(0, 0, rect.width, rect.height);
};
exports.ImageData.prototype.show = function (x = 5, y = 5, zoom = 1) {
    if (typeof document == "undefined") {
        console.error("need a document to show an imagedata object");
        return;
    }
    var imgs = document.getElementsByClassName("debugimage");
    while (imgs.length > exports.ImageData.prototype.show.maxImages) {
        imgs[0].remove();
    }
    var el = this.toImage();
    el.classList.add("debugimage");
    el.style.position = "absolute";
    el.style.zIndex = "1000";
    el.style.left = x / zoom + "px";
    el.style.top = y / zoom + "px";
    el.style.background = "purple";
    el.style.cursor = "pointer";
    el.style.imageRendering = "pixelated";
    el.style.outline = "1px solid #0f0";
    el.style.width = (this.width == 1 ? 100 : this.width) * zoom + "px";
    el.style.height = (this.height == 1 ? 100 : this.height) * zoom + "px";
    el.onclick = function () { el.remove(); };
    document.body.appendChild(el);
    return el;
};
exports.ImageData.prototype.show.maxImages = 10;
exports.ImageData.prototype.toImage = function (rect) {
    if (!rect) {
        rect = new a1lib.Rect(0, 0, this.width, this.height);
    }
    if (typeof document != "undefined") {
        var el = document.createElement("canvas");
        el.width = rect.width;
        el.height = rect.height;
    }
    else {
        el = nodeimports.createCanvas(rect.width, rect.height);
    }
    var ctx = el.getContext("2d");
    ctx.putImageData(this.toDrawableData(), -rect.x, -rect.y);
    return el;
};
exports.ImageData.prototype.getPixel = function (x, y) {
    var i = x * 4 + y * 4 * this.width;
    return [this.data[i], this.data[i + 1], this.data[i + 2], this.data[i + 3]];
};
exports.ImageData.prototype.getPixelValueSum = function (x, y) {
    var i = x * 4 + y * 4 * this.width;
    return this.data[i] + this.data[i + 1] + this.data[i + 2];
};
exports.ImageData.prototype.getPixelInt = function (x, y) {
    var i = x * 4 + y * 4 * this.width;
    return (this.data[i + 3] << 24) + (this.data[i + 0] << 16) + (this.data[i + 1] << 8) + (this.data[i + 2] << 0);
};
exports.ImageData.prototype.getColorDifference = function (x, y, r, g, b, a = 255) {
    var i = x * 4 + y * 4 * this.width;
    return Math.abs(this.data[i] - r) + Math.abs(this.data[i + 1] - g) + Math.abs(this.data[i + 2] - b) * a / 255;
};
exports.ImageData.prototype.setPixel = function (x, y, ...color) {
    var r, g, b, a;
    var [r, g, b, a] = (Array.isArray(color[0]) ? color[0] : color);
    var i = x * 4 + y * 4 * this.width;
    this.data[i] = r;
    this.data[i + 1] = g;
    this.data[i + 2] = b;
    this.data[i + 3] = a == undefined ? 255 : a;
};
exports.ImageData.prototype.setPixelInt = function (x, y, color) {
    var i = x * 4 + y * 4 * this.width;
    this.data[i] = (color >> 24) & 0xff;
    this.data[i + 1] = (color >> 16) & 0xff;
    this.data[i + 2] = (color >> 8) & 0xff;
    this.data[i + 3] = (color >> 0) & 0xff;
};
exports.ImageData.prototype.toFileBytes = function (format, quality) {
    if (typeof HTMLCanvasElement != "undefined") {
        return new Promise(d => this.toImage().toBlob(b => {
            var r = new FileReader();
            r.readAsArrayBuffer(b);
            r.onload = () => d(new Uint8Array(r.result));
        }, format, quality));
    }
    else {
        return nodeimports.imageDataToFileBytes(this, format, quality);
    }
};
exports.ImageData.prototype.toPngBase64 = function () {
    if (typeof HTMLCanvasElement != "undefined") {
        var str = this.toImage().toDataURL("image/png");
        return str.slice(str.indexOf(",") + 1);
    }
    else {
        throw new Error("synchronous image conversion not supported in nodejs, try using ImageData.prototype.toFileBytes");
    }
};
exports.ImageData.prototype.pixelCompare = function (buf, x = 0, y = 0, max) {
    return a1lib.ImageDetect.simpleCompare(this, buf, x, y, max);
};
exports.ImageData.prototype.copyTo = function (target, sourcex, sourcey, width, height, targetx, targety) {
    //convince v8 that these are 31bit uints
    const targetwidth = target.width | 0;
    const thiswidth = this.width | 0;
    const copywidth = width | 0;
    const fastwidth = Math.floor(width / 4) * 4;
    const thisdata = new Int32Array(this.data.buffer, this.data.byteOffset, this.data.byteLength / 4);
    const targetdata = new Int32Array(target.data.buffer, target.data.byteOffset, target.data.byteLength / 4);
    for (let cy = 0; cy < height; cy++) {
        let cx = 0;
        let it = (cx + targetx) + (cy + targety) * targetwidth;
        let is = (cx + sourcex) + (cy + sourcey) * thiswidth;
        //copy 4 pixels per iter (xmm)
        for (; cx < fastwidth; cx += 4) {
            targetdata[it] = thisdata[is];
            targetdata[it + 1] = thisdata[is + 1];
            targetdata[it + 2] = thisdata[is + 2];
            targetdata[it + 3] = thisdata[is + 3];
            it += 4;
            is += 4;
        }
        //copy remainder per pixel
        for (; cx < copywidth; cx++) {
            targetdata[it] = thisdata[is];
            it += 1;
            is += 1;
        }
    }
};
if (typeof HTMLImageElement != "undefined") {
    HTMLImageElement.prototype.toBuffer = function (x = 0, y = 0, w = this.width, h = this.height) {
        var cnv = document.createElement("canvas");
        cnv.width = w;
        cnv.height = h;
        var ctx = cnv.getContext("2d");
        ctx.drawImage(this, -x, -y);
        return ctx.getImageData(0, 0, w, h);
    };
    HTMLImageElement.prototype.toCanvas = function (x = 0, y = 0, w = this.width, h = this.height) {
        var cnv = document.createElement("canvas");
        cnv.width = w;
        cnv.height = h;
        var ctx = cnv.getContext("2d");
        ctx.drawImage(this, -x, -y);
        return cnv;
    };
}


/***/ }),

/***/ "./src/base/imagedetect.ts":
/*!*********************************!*\
  !*** ./src/base/imagedetect.ts ***!
  \*********************************/
/***/ (function(__unused_webpack_module, exports, __nested_webpack_require_15248__) {


var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ImageDataSet = exports.webpackImages = exports.asyncMap = exports.coldif = exports.simpleCompareRMSE = exports.simpleCompare = exports.findSubbuffer = exports.findSubimage = exports.clearPngColorspace = exports.isPngBuffer = exports.imageDataFromFileBuffer = exports.imageDataFromBase64 = exports.imageDataFromUrl = void 0;
const imgref_1 = __nested_webpack_require_15248__(/*! ./imgref */ "./src/base/imgref.ts");
const wapper = __importStar(__nested_webpack_require_15248__(/*! ./wrapper */ "./src/base/wrapper.ts"));
const nodeimports = __importStar(__nested_webpack_require_15248__(/*! ./nodepolyfill */ "./src/base/nodepolyfill.ts"));
const _1 = __nested_webpack_require_15248__(/*! . */ "./src/base/index.ts");
/**
* Downloads an image and returns the ImageData
* Make sure the png image does not have a sRGB chunk or the resulting pixels will differ for different users!!!
* @param url http(s) or data url to the image
*/
async function imageDataFromUrl(url) {
    if (typeof Image != "undefined") {
        var img = new Image();
        img.crossOrigin = "crossorigin";
        return await new Promise((done, fail) => {
            img.onload = function () { done(img.toBuffer()); };
            img.onerror = fail;
            img.src = url;
        });
    }
    else {
        var hdr = "data:image/png;base64,";
        if (url.startsWith(hdr)) {
            return imageDataFromBase64(url.slice(hdr.length));
        }
        throw new Error("loading remote images in nodejs has been disabled, load the raw bytes and use imageDataFromNodeBuffer instead");
    }
}
exports.imageDataFromUrl = imageDataFromUrl;
/**
* Loads an ImageData object from a base64 encoded png image
* Make sure the png image does not have a sRGB chunk or the resulting pixels will differ for different users!!!
* @param data a base64 encoded png image
*/
async function imageDataFromBase64(data) {
    if (typeof Image != "undefined") {
        return imageDataFromUrl("data:image/png;base64," + data);
    }
    else {
        return nodeimports.imageDataFromBase64(data);
    }
}
exports.imageDataFromBase64 = imageDataFromBase64;
/**
 * Loads an ImageData object directly from a png encoded file buffer
 * This method ensures that png color space headers are taken care off
 * @param data The bytes of a png file
 */
async function imageDataFromFileBuffer(data) {
    clearPngColorspace(data);
    if (typeof Image != "undefined") {
        let blob = new Blob([data], { type: "image/png" });
        let url = URL.createObjectURL(blob);
        let r = await imageDataFromUrl(url);
        URL.revokeObjectURL(url);
        return r;
    }
    else {
        return nodeimports.imageDataFromBuffer(data);
    }
}
exports.imageDataFromFileBuffer = imageDataFromFileBuffer;
/**
* Checks if a given byte array is a png file (by checking for ?PNG as first 4 bytes)
* @param bytes Raw bytes of the png file
*/
function isPngBuffer(bytes) {
    return bytes[0] == 137 && bytes[1] == 80 && bytes[2] == 78 && bytes[3] == 71;
}
exports.isPngBuffer = isPngBuffer;
/**
* Resets the colorspace data in the png file.
* This makes sure the browser renders the exact colors in the file instead of filtering it in order to obtain the best real life representation of
* what it looked like on the authors screen. (this feature is often broken and not supported)
* For example a round trip printscreen -> open in browser results in different colors than the original
* @param data Raw bytes of the png file
*/
function clearPngColorspace(data) {
    if (!isPngBuffer(data)) {
        throw new Error("non-png image received");
    }
    var i = 8;
    while (i < data.length) {
        var length = data[i++] * 0x1000000 + data[i++] * 0x10000 + data[i++] * 0x100 + data[i++];
        var ancillary = !!((data[i] >> 5) & 1);
        var chunkname = String.fromCharCode(data[i], data[i + 1], data[i + 2], data[i + 3]);
        var chunkid = chunkname.toLowerCase();
        if (chunkid != "trns" && ancillary) {
            data[i + 0] = "n".charCodeAt(0);
            data[i + 1] = "o".charCodeAt(0);
            data[i + 2] = "P".charCodeAt(0);
            data[i + 3] = "E".charCodeAt(0);
            //calculate new chunk checksum
            //http://www.libpng.org/pub/png/spec/1.2/PNG-CRCAppendix.html
            var end = i + 4 + length;
            var crc = 0xffffffff;
            //should be fast enough like this
            var bitcrc = function (bit) {
                for (var k = 0; k < 8; k++) {
                    if (bit & 1) {
                        bit = 0xedb88320 ^ (bit >>> 1);
                    }
                    else {
                        bit = bit >>> 1;
                    }
                }
                return bit;
            };
            for (var a = i; a < end; a++) {
                if (a >= i + 4) {
                    data[a] = 0;
                }
                var bit = data[a];
                crc = bitcrc((crc ^ bit) & 0xff) ^ (crc >>> 8);
            }
            crc = crc ^ 0xffffffff;
            //new chunk checksum
            data[i + 4 + length + 0] = (crc >> 24) & 0xff;
            data[i + 4 + length + 1] = (crc >> 16) & 0xff;
            data[i + 4 + length + 2] = (crc >> 8) & 0xff;
            data[i + 4 + length + 3] = (crc >> 0) & 0xff;
        }
        if (chunkname == "IEND") {
            break;
        }
        i += 4; //type
        i += length; //data
        i += 4; //crc
    }
}
exports.clearPngColorspace = clearPngColorspace;
/**
* finds the given needle ImageBuffer in the given haystack ImgRef this function uses the best optimized available
* code depending on the type of the haystack. It will use fast c# searching if the haystack is an ImgRefBind, js searching
* is used otherwise.
* the checklist argument is no longer used and should ignored or null/undefined
* The optional sx,sy,sw,sh arguments indicate a bounding rectangle in which to search the needle. The rectangle should be bigger than the needle
* @returns An array of points where the needle is found. The array is empty if none are found
*/
function findSubimage(haystackImgref, needleBuffer, sx = 0, sy = 0, sw = haystackImgref.width, sh = haystackImgref.height) {
    if (!haystackImgref) {
        throw new TypeError();
    }
    if (!needleBuffer) {
        throw new TypeError();
    }
    var max = 30;
    //check if we can do this in alt1
    if (haystackImgref instanceof imgref_1.ImgRefBind && wapper.hasAlt1 && alt1.bindFindSubImg) {
        var needlestr = wapper.encodeImageString(needleBuffer);
        var r = alt1.bindFindSubImg(haystackImgref.handle, needlestr, needleBuffer.width, sx, sy, sw, sh);
        if (!r) {
            throw new wapper.Alt1Error();
        }
        return JSON.parse(r);
    }
    return findSubbuffer(haystackImgref.read(), needleBuffer, sx, sy, sw, sh);
}
exports.findSubimage = findSubimage;
/**
* Uses js to find the given needle ImageBuffer in the given haystack ImageBuffer. It is better to use the alt1.bind- functions in
* combination with a1nxt.findsubimg.
* the optional sx,sy,sw,sh arguments indicate a bounding rectangle in which to search.
* @returns An array of points where the needle is found. The array is empty if none are found
*/
function findSubbuffer(haystack, needle, sx = 0, sy = 0, sw = haystack.width, sh = haystack.height) {
    var r = [];
    var maxdif = 30;
    var maxresults = 50;
    var needlestride = needle.width * 4;
    var heystackstride = haystack.width * 4;
    //built list of non trans pixel to check
    var checkList = [];
    for (var y = 0; y < needle.height; y++) {
        for (var x = 0; x < needle.width; x++) {
            var i = x * 4 + y * needlestride;
            if (needle.data[i + 3] == 255) {
                checkList.push({ x: x, y: y });
            }
            if (checkList.length == 10) {
                break;
            }
        }
        if (checkList.length == 10) {
            break;
        }
    }
    var cw = (sx + sw) - needle.width;
    var ch = (sy + sh) - needle.height;
    var checklength = checkList.length;
    for (var y = sy; y <= ch; y++) {
        outer: for (var x = sx; x <= cw; x++) {
            for (var a = 0; a < checklength; a++) {
                var i1 = (x + checkList[a].x) * 4 + (y + checkList[a].y) * heystackstride;
                var i2 = checkList[a].x * 4 + checkList[a].y * needlestride;
                var d = 0;
                d = d + Math.abs(haystack.data[i1 + 0] - needle.data[i2 + 0]) | 0;
                d = d + Math.abs(haystack.data[i1 + 1] - needle.data[i2 + 1]) | 0;
                d = d + Math.abs(haystack.data[i1 + 2] - needle.data[i2 + 2]) | 0;
                d *= 255 / needle.data[i2 + 3];
                if (d > maxdif) {
                    continue outer;
                }
            }
            if (simpleCompare(haystack, needle, x, y, maxdif) != Infinity) {
                r.push({ x, y });
                if (r.length > maxresults) {
                    return r;
                }
            }
        }
    }
    return r;
}
exports.findSubbuffer = findSubbuffer;
/**
* Compares two images and returns the average color difference per pixel between them
* @param max The max color difference at any point in the image before short circuiting the function and returning Infinity. set to -1 to always continue.
* @returns The average color difference per pixel or Infinity if the difference is more than max at any point in the image
*/
function simpleCompare(bigbuf, checkbuf, x, y, max = 30) {
    if (x < 0 || y < 0) {
        throw new RangeError();
    }
    if (x + checkbuf.width > bigbuf.width || y + checkbuf.height > bigbuf.height) {
        throw new RangeError();
    }
    if (max == -1) {
        max = 255 * 4;
    }
    var dif = 0;
    for (var step = 8; step >= 1; step /= 2) {
        for (var cx = 0; cx < checkbuf.width; cx += step) {
            for (var cy = 0; cy < checkbuf.height; cy += step) {
                var i1 = (x + cx) * 4 + (y + cy) * bigbuf.width * 4;
                var i2 = cx * 4 + cy * checkbuf.width * 4;
                var d = 0;
                d = d + Math.abs(bigbuf.data[i1 + 0] - checkbuf.data[i2 + 0]) | 0;
                d = d + Math.abs(bigbuf.data[i1 + 1] - checkbuf.data[i2 + 1]) | 0;
                d = d + Math.abs(bigbuf.data[i1 + 2] - checkbuf.data[i2 + 2]) | 0;
                d *= checkbuf.data[i2 + 3] / 255;
                if (step == 1) {
                    dif += d;
                }
                if (d > max) {
                    return Infinity;
                }
            }
        }
    }
    return dif / checkbuf.width / checkbuf.height;
}
exports.simpleCompare = simpleCompare;
/**
* Calculates the root mean square error between the two buffers at the given coordinate, this method can be used in situations with significant blur or
* transparency, it does not bail early on non-matching images like simpleCompare does so it can be expected to be much slower when called often.
* @returns The root mean square error beteen the images, high single pixel errors are penalized more than consisten low errors. return of 0 means perfect match.
*/
function simpleCompareRMSE(bigbuf, checkbuf, x, y) {
    if (x < 0 || y < 0) {
        throw new RangeError();
    }
    if (x + checkbuf.width > bigbuf.width || y + checkbuf.height > bigbuf.height) {
        throw new RangeError();
    }
    var dif = 0;
    var numpix = 0;
    for (var cx = 0; cx < checkbuf.width; cx++) {
        for (var cy = 0; cy < checkbuf.height; cy++) {
            var i1 = (x + cx) * 4 + (y + cy) * bigbuf.width * 4;
            var i2 = cx * 4 + cy * checkbuf.width * 4;
            var d = 0;
            d = d + Math.abs(bigbuf.data[i1 + 0] - checkbuf.data[i2 + 0]) | 0;
            d = d + Math.abs(bigbuf.data[i1 + 1] - checkbuf.data[i2 + 1]) | 0;
            d = d + Math.abs(bigbuf.data[i1 + 2] - checkbuf.data[i2 + 2]) | 0;
            var weight = checkbuf.data[i2 + 3] / 255;
            numpix += weight;
            dif += d * d * weight;
        }
    }
    return Math.sqrt(dif / numpix);
}
exports.simpleCompareRMSE = simpleCompareRMSE;
/**
* Returns the difference between two colors (scaled to the alpha of the second color)
*/
function coldif(r1, g1, b1, r2, g2, b2, a2) {
    return (Math.abs(r1 - r2) + Math.abs(g1 - g2) + Math.abs(b1 - b2)) * a2 / 255; //only applies alpha for 2nd buffer!
}
exports.coldif = coldif;
/**
 * Turns map of promises into a map that contains the resolved values after loading.
 * @param input
 */
function asyncMap(input) {
    var raw = {};
    var promises = [];
    for (var a in input) {
        if (input.hasOwnProperty(a)) {
            raw[a] = null;
            promises.push(input[a].then(function (a, i) { raw[a] = i; r[a] = i; }.bind(null, a)));
        }
    }
    var r = {};
    var promise = Promise.all(promises).then(() => { r.loaded = true; return r; });
    Object.defineProperty(r, "loaded", { enumerable: false, value: false, writable: true });
    Object.defineProperty(r, "promise", { enumerable: false, value: promise });
    Object.defineProperty(r, "raw", { enumerable: false, value: raw });
    return Object.assign(r, raw);
}
exports.asyncMap = asyncMap;
/**
* Same as asyncMap, but casts the properties to ImageData in typescript
*/
function webpackImages(input) {
    return asyncMap(input);
}
exports.webpackImages = webpackImages;
class ImageDataSet {
    constructor() {
        this.buffers = [];
    }
    matchBest(img, x, y, max) {
        let best = null;
        let bestscore = max;
        for (let a = 0; a < this.buffers.length; a++) {
            let score = img.pixelCompare(this.buffers[a], x, y, bestscore);
            if (isFinite(score) && (bestscore == undefined || score < bestscore)) {
                bestscore = score;
                best = a;
            }
        }
        if (best == null) {
            return null;
        }
        return { index: best, score: bestscore };
    }
    static fromFilmStrip(baseimg, width) {
        if ((baseimg.width % width) != 0) {
            throw new Error("slice size does not fit in base img");
        }
        let r = new ImageDataSet();
        for (let x = 0; x < baseimg.width; x += width) {
            r.buffers.push(baseimg.clone(new _1.Rect(x, 0, width, baseimg.height)));
        }
        return r;
    }
    static fromFilmStripUneven(baseimg, widths) {
        let r = new ImageDataSet();
        let x = 0;
        for (let w of widths) {
            r.buffers.push(baseimg.clone(new _1.Rect(x, 0, w, baseimg.height)));
            x += w;
            if (x > baseimg.width) {
                throw new Error("sampling filmstrip outside bounds");
            }
        }
        if (x != baseimg.width) {
            throw new Error("unconsumed pixels left in film strip imagedata");
        }
        return r;
    }
    static fromAtlas(baseimg, slices) {
        let r = new ImageDataSet();
        for (let slice of slices) {
            r.buffers.push(baseimg.clone(slice));
        }
        return r;
    }
}
exports.ImageDataSet = ImageDataSet;


/***/ }),

/***/ "./src/base/imgref.ts":
/*!****************************!*\
  !*** ./src/base/imgref.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, exports, __nested_webpack_require_31629__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ImgRefData = exports.ImgRefBind = exports.ImgRefCtx = exports.ImgRef = void 0;
const index_1 = __nested_webpack_require_31629__(/*! ./index */ "./src/base/index.ts");
/**
 * Represents an image that might be in different types of memory
 * This is mostly used to represent images still in Alt1 memory that have
 * not been transfered to js yet. Various a1lib api's use this type and
 * choose the most efficient approach based on the memory type
 */
class ImgRef {
    constructor(x, y, w, h) {
        this.t = "none";
        this.x = x;
        this.y = y;
        this.width = w;
        this.height = h;
    }
    read(x = 0, y = 0, w = this.width, h = this.height) {
        throw new Error("This imgref (" + this.t + ") does not support toData");
    }
    findSubimage(needle, sx = 0, sy = 0, w = this.width, h = this.height) {
        return index_1.ImageDetect.findSubimage(this, needle, sx, sy, w, h);
    }
    toData(x = this.x, y = this.y, w = this.width, h = this.height) {
        return this.read(x - this.x, y - this.y, w, h);
    }
    ;
    containsArea(rect) {
        return this.x <= rect.x && this.y <= rect.y && this.x + this.width >= rect.x + rect.width && this.y + this.height >= rect.y + rect.height;
    }
}
exports.ImgRef = ImgRef;
/**
 * Represents an image in js render memory (canvas/image tag)
 */
class ImgRefCtx extends ImgRef {
    constructor(img, x = 0, y = 0) {
        if (img instanceof CanvasRenderingContext2D) {
            super(x, y, img.canvas.width, img.canvas.height);
            this.ctx = img;
        }
        else {
            super(x, y, img.width, img.height);
            var cnv = (img instanceof HTMLCanvasElement ? img : img.toCanvas());
            this.ctx = cnv.getContext("2d");
        }
        this.t = "ctx";
    }
    read(x = 0, y = 0, w = this.width, h = this.height) {
        return this.ctx.getImageData(x, y, w, h);
    }
}
exports.ImgRefCtx = ImgRefCtx;
/**
 * Represents in image in Alt1 memory, This type of image can be searched for subimages
 * very efficiently and transfering the full image to js can be avoided this way
 */
class ImgRefBind extends ImgRef {
    constructor(handle, x = 0, y = 0, w = 0, h = 0) {
        super(x, y, w, h);
        this.handle = handle;
        this.t = "bind";
    }
    read(x = 0, y = 0, w = this.width, h = this.height) {
        return (0, index_1.transferImageData)(this.handle, x, y, w, h);
    }
}
exports.ImgRefBind = ImgRefBind;
/**
 * Represents an image in js memory
 */
class ImgRefData extends ImgRef {
    constructor(buf, x = 0, y = 0) {
        super(x, y, buf.width, buf.height);
        this.buf = buf;
        this.t = "data";
    }
    read(x = 0, y = 0, w = this.width, h = this.height) {
        if (x == 0 && y == 0 && w == this.width && h == this.height) {
            return this.buf;
        }
        var r = new ImageData(w, h);
        for (var b = y; b < y + h; b++) {
            for (var a = x; a < x + w; a++) {
                var i1 = (a - x) * 4 + (b - y) * w * 4;
                var i2 = a * 4 + b * 4 * this.buf.width;
                r.data[i1] = this.buf.data[i2];
                r.data[i1 + 1] = this.buf.data[i2 + 1];
                r.data[i1 + 2] = this.buf.data[i2 + 2];
                r.data[i1 + 3] = this.buf.data[i2 + 3];
            }
        }
        return r;
    }
}
exports.ImgRefData = ImgRefData;


/***/ }),

/***/ "./src/base/index.ts":
/*!***************************!*\
  !*** ./src/base/index.ts ***!
  \***************************/
/***/ (function(__unused_webpack_module, exports, __nested_webpack_require_35283__) {


var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ImageDataSet = exports.findSubbuffer = exports.simpleCompare = exports.findSubimage = exports.webpackImages = exports.NodePolyfill = exports.ImageData = exports.Rect = exports.PasteInput = exports.ImageDetect = void 0;
__nested_webpack_require_35283__(/*! ./declarations */ "./src/base/declarations.ts");
exports.ImageDetect = __importStar(__nested_webpack_require_35283__(/*! ./imagedetect */ "./src/base/imagedetect.ts"));
exports.PasteInput = __importStar(__nested_webpack_require_35283__(/*! ./pasteinput */ "./src/base/pasteinput.ts"));
var rect_1 = __nested_webpack_require_35283__(/*! ./rect */ "./src/base/rect.ts");
Object.defineProperty(exports, "Rect", ({ enumerable: true, get: function () { return __importDefault(rect_1).default; } }));
var imagedata_extensions_1 = __nested_webpack_require_35283__(/*! ./imagedata-extensions */ "./src/base/imagedata-extensions.ts");
Object.defineProperty(exports, "ImageData", ({ enumerable: true, get: function () { return imagedata_extensions_1.ImageData; } }));
exports.NodePolyfill = __importStar(__nested_webpack_require_35283__(/*! ./nodepolyfill */ "./src/base/nodepolyfill.ts"));
__exportStar(__nested_webpack_require_35283__(/*! ./imgref */ "./src/base/imgref.ts"), exports);
__exportStar(__nested_webpack_require_35283__(/*! ./wrapper */ "./src/base/wrapper.ts"), exports);
var imagedetect_1 = __nested_webpack_require_35283__(/*! ./imagedetect */ "./src/base/imagedetect.ts");
Object.defineProperty(exports, "webpackImages", ({ enumerable: true, get: function () { return imagedetect_1.webpackImages; } }));
Object.defineProperty(exports, "findSubimage", ({ enumerable: true, get: function () { return imagedetect_1.findSubimage; } }));
Object.defineProperty(exports, "simpleCompare", ({ enumerable: true, get: function () { return imagedetect_1.simpleCompare; } }));
Object.defineProperty(exports, "findSubbuffer", ({ enumerable: true, get: function () { return imagedetect_1.findSubbuffer; } }));
Object.defineProperty(exports, "ImageDataSet", ({ enumerable: true, get: function () { return imagedetect_1.ImageDataSet; } }));


/***/ }),

/***/ "./src/base/nodepolyfill.ts":
/*!**********************************!*\
  !*** ./src/base/nodepolyfill.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, exports, __nested_webpack_require_38931__) => {


//nodejs and electron polyfills for web api's
//commented out type info as that breaks webpack with optional dependencies
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.imageDataFromBuffer = exports.imageDataFromBase64 = exports.imageDataToFileBytes = exports.createCanvas = exports.imageDataToDrawable = exports.requireElectronCommon = exports.requireNodeCanvas = exports.requireSharp = exports.polyfillRequire = void 0;
const index_1 = __nested_webpack_require_38931__(/*! ./index */ "./src/base/index.ts");
const imagedetect_1 = __nested_webpack_require_38931__(/*! ./imagedetect */ "./src/base/imagedetect.ts");
var requirefunction = null;
/**
 * Call this function to let the libs require extra dependencies on nodejs in order
 * to polyfill some browser api's (mostly image compression/decompression)
 * `NodePolifill.polyfillRequire(require);` should solve most cases
 */
function polyfillRequire(requirefn) {
    requirefunction = requirefn;
}
exports.polyfillRequire = polyfillRequire;
function requireSharp() {
    try {
        if (requirefunction) {
            return requirefunction("sharp");
        }
        else {
            return __nested_webpack_require_38931__(/* webpackIgnore: true */ /*! sharp */ "sharp"); // as typeof import("sharp");
        }
    }
    catch (e) { }
    return null;
}
exports.requireSharp = requireSharp;
function requireNodeCanvas() {
    //attempt to require sharp first, after loading canvas the module sharp fails to load
    requireSharp();
    try {
        if (requirefunction) {
            return requirefunction("canvas");
        }
        else {
            return __nested_webpack_require_38931__(/* webpackIgnore: true */ /*! canvas */ "canvas"); // as typeof import("sharp");
        }
    }
    catch (e) { }
    return null;
}
exports.requireNodeCanvas = requireNodeCanvas;
function requireElectronCommon() {
    try {
        if (requirefunction) {
            return requirefunction("electron/common");
        }
        else {
            return __nested_webpack_require_38931__(/* webpackIgnore: true */ /*! electron/common */ "electron/common");
        }
    }
    catch (e) { }
    return null;
}
exports.requireElectronCommon = requireElectronCommon;
function imageDataToDrawable(buf) {
    let nodecnv = requireNodeCanvas();
    if (!nodecnv) {
        throw new Error("couldn't find built-in canvas or the module 'canvas'");
    }
    return new nodecnv.ImageData(buf.data, buf.width, buf.height);
}
exports.imageDataToDrawable = imageDataToDrawable;
function createCanvas(w, h) {
    let nodecnv = requireNodeCanvas();
    if (!nodecnv) {
        throw new Error("couldn't find built-in canvas or the module 'canvas'");
    }
    return nodecnv.createCanvas(w, h);
}
exports.createCanvas = createCanvas;
function flipBGRAtoRGBA(data) {
    for (let i = 0; i < data.length; i += 4) {
        let tmp = data[i + 2];
        data[i + 2] = data[i + 0];
        data[i + 0] = tmp;
    }
}
async function imageDataToFileBytes(buf, format, quality) {
    //use the electron API if we're in electron
    var electronCommon;
    var sharp;
    if (electronCommon = requireElectronCommon()) {
        let nativeImage = electronCommon.nativeImage;
        //need to copy the buffer in order to flip it without destroying the original
        let bufcpy = Buffer.from(buf.data.slice(buf.data.byteOffset, buf.data.byteLength));
        flipBGRAtoRGBA(bufcpy);
        let nativeimg = nativeImage.createFromBitmap(bufcpy, { width: buf.width, height: buf.height });
        return nativeimg.toPNG();
    }
    else if (sharp = requireSharp()) {
        let img = sharp(Buffer.from(buf.data.buffer), { raw: { width: buf.width, height: buf.height, channels: 4 } });
        if (format == "image/png") {
            img.png();
        }
        else if (format == "image/webp") {
            var opts = { quality: 80 };
            if (typeof quality == "number") {
                opts.quality = quality * 100;
            }
            img.webp(opts);
        }
        else {
            throw new Error("unknown image format: " + format);
        }
        return await img.toBuffer({ resolveWithObject: false }).buffer;
    }
    throw new Error("coulnd't find build-in image compression methods or the module 'electron/common' or 'sharp'");
}
exports.imageDataToFileBytes = imageDataToFileBytes;
function imageDataFromBase64(base64) {
    return imageDataFromBuffer(Buffer.from(base64, "base64"));
}
exports.imageDataFromBase64 = imageDataFromBase64;
async function imageDataFromBuffer(buffer) {
    (0, imagedetect_1.clearPngColorspace)(buffer);
    //use the electron API if we're in electron
    var electronCommon;
    var nodecnv;
    if (electronCommon = requireElectronCommon()) {
        let nativeImage = electronCommon.nativeImage;
        let img = nativeImage.createFromBuffer(buffer);
        let pixels = img.toBitmap();
        let size = img.getSize();
        let pixbuf = new Uint8ClampedArray(pixels.buffer, pixels.byteOffset, pixels.byteLength);
        flipBGRAtoRGBA(pixbuf);
        return new index_1.ImageData(pixbuf, size.width, size.height);
    }
    else if (nodecnv = requireNodeCanvas()) {
        return new Promise((done, err) => {
            let img = new nodecnv.Image();
            img.onerror = err;
            img.onload = () => {
                var cnv = nodecnv.createCanvas(img.naturalWidth, img.naturalHeight);
                var ctx = cnv.getContext("2d");
                ctx.drawImage(img, 0, 0);
                var data = ctx.getImageData(0, 0, img.naturalWidth, img.naturalHeight);
                //use our own class
                done(new index_1.ImageData(data.data, data.width, data.height));
            };
            img.src = Buffer.from(buffer.buffer, buffer.byteOffset, buffer.byteLength);
        });
    }
    throw new Error("couldn't find built-in canvas, module 'electron/common' or the module 'canvas'");
}
exports.imageDataFromBuffer = imageDataFromBuffer;


/***/ }),

/***/ "./src/base/pasteinput.ts":
/*!********************************!*\
  !*** ./src/base/pasteinput.ts ***!
  \********************************/
/***/ (function(__unused_webpack_module, exports, __nested_webpack_require_45123__) {


var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.fileDialog = exports.start = exports.startDragNDrop = exports.triggerPaste = exports.unlisten = exports.listen = exports.lastref = void 0;
const index_1 = __nested_webpack_require_45123__(/*! ./index */ "./src/base/index.ts");
const ImageDetect = __importStar(__nested_webpack_require_45123__(/*! ./imagedetect */ "./src/base/imagedetect.ts"));
var listeners = [];
var started = false;
var dndStarted = false;
var pasting = false;
exports.lastref = null;
function listen(func, errorfunc, dragndrop) {
    listeners.push({ cb: func, error: errorfunc });
    if (!started) {
        start();
    }
    if (dragndrop && !dndStarted) {
        startDragNDrop();
    }
}
exports.listen = listen;
function unlisten(func) {
    let i = listeners.findIndex(c => c.cb == func);
    if (i != -1) {
        listeners.splice(i, 1);
    }
}
exports.unlisten = unlisten;
/**
 * currently used in multiple document situations (iframe), might be removed in the future
 */
function triggerPaste(img) {
    exports.lastref = img;
    for (var a in listeners) {
        listeners[a].cb(exports.lastref);
    }
}
exports.triggerPaste = triggerPaste;
function pasted(img) {
    pasting = false;
    let cnv = img instanceof HTMLCanvasElement ? img : img.toCanvas();
    triggerPaste(new index_1.ImgRefCtx(cnv));
}
function error(error, mes) {
    var _a, _b;
    pasting = false;
    for (var a in listeners) {
        (_b = (_a = listeners[a]).error) === null || _b === void 0 ? void 0 : _b.call(_a, mes, error);
    }
}
function startDragNDrop() {
    var getitem = function (items) {
        var foundimage = "";
        for (var a = 0; a < items.length; a++) {
            var item = items[a];
            var m = item.type.match(/^image\/(\w+)$/);
            if (m) {
                if (m[1] == "png") {
                    return item;
                }
                else {
                    foundimage = m[1];
                }
            }
        }
        if (foundimage) {
            error("notpng", "The image you uploaded is not a .png image. Other image type have compression noise and can't be used for image detection.");
        }
        return null;
    };
    window.addEventListener("dragover", function (e) {
        e.preventDefault();
    });
    window.addEventListener("drop", function (e) {
        if (!e.dataTransfer) {
            return;
        }
        var item = getitem(e.dataTransfer.items);
        e.preventDefault();
        if (!item) {
            return;
        }
        fromFile(item.getAsFile());
    });
}
exports.startDragNDrop = startDragNDrop;
function start() {
    if (started) {
        return;
    }
    started = true;
    //determine if we have a clipboard api
    //try{a=new Event("clipboard"); a="clipboardData" in a;}
    //catch(e){a=false;}
    var ischrome = !!navigator.userAgent.match(/Chrome/) && !navigator.userAgent.match(/Edge/);
    //old method breaks after chrome 41, revert to good old user agent sniffing
    //nvm, internet explorer (edge) decided that it wants to be chrome, however fails at delivering
    //turns out this one is interesting, edge is a hybrid between the paste api's
    var apipasted = function (e) {
        if (!e.clipboardData) {
            return;
        }
        for (var a = 0; a < e.clipboardData.items.length; a++) { //loop all data types
            if (e.clipboardData.items[a].type.indexOf("image") != -1) {
                var file = e.clipboardData.items[a].getAsFile();
                if (file) {
                    var img = new Image();
                    img.src = (window.URL || window.webkitURL).createObjectURL(file);
                    if (img.width > 0) {
                        pasted(img);
                    }
                    else {
                        img.onload = function () { pasted(img); };
                    }
                }
            }
        }
    };
    if (ischrome) {
        document.addEventListener("paste", apipasted);
    }
    else {
        var catcher = document.createElement("div");
        catcher.setAttribute("contenteditable", "");
        catcher.className = "forcehidden"; //retarded ie safety/bug, cant apply styles using js//TODO i don't even know what's going on
        catcher.onpaste = function (e) {
            if (e.clipboardData && e.clipboardData.items) {
                apipasted(e);
                return;
            }
            setTimeout(function () {
                var b = catcher.children[0];
                if (!b || b.tagName != "IMG") {
                    return;
                }
                var img = new Image();
                img.src = b.src;
                var a = img.src.match(/^data:([\w\/]+);/);
                if (img.width > 0) {
                    pasted(img);
                }
                else {
                    img.onload = function () { pasted(img); };
                }
                catcher.innerHTML = "";
            }, 1);
        };
        document.body.appendChild(catcher);
    }
    //detect if ctrl-v is pressed and focus catcher if needed
    document.addEventListener("keydown", function (e) {
        if (e.target.tagName == "INPUT") {
            return;
        }
        if (e.keyCode != "V".charCodeAt(0) || !e.ctrlKey) {
            return;
        }
        pasting = true;
        setTimeout(function () {
            if (pasting) {
                error("noimg", "You pressed Ctrl+V, but no image was pasted by your browser, make sure your clipboard contains an image, and not a link to an image.");
            }
        }, 1000);
        if (catcher) {
            catcher.focus();
        }
    });
}
exports.start = start;
function fileDialog() {
    var fileinput = document.createElement("input");
    fileinput.type = "file";
    fileinput.accept = "image/png";
    fileinput.onchange = function () { if (fileinput.files && fileinput.files[0]) {
        fromFile(fileinput.files[0]);
    } };
    fileinput.click();
    return fileinput;
}
exports.fileDialog = fileDialog;
function fromFile(file) {
    if (!file) {
        return;
    }
    var reader = new FileReader();
    reader.onload = function () {
        var bytearray = new Uint8Array(reader.result);
        if (ImageDetect.isPngBuffer(bytearray)) {
            ImageDetect.clearPngColorspace(bytearray);
        }
        var blob = new Blob([bytearray], { type: "image/png" });
        var img = new Image();
        img.onerror = () => error("invalidfile", "The file you uploaded could not be opened as an image.");
        var bloburl = URL.createObjectURL(blob);
        img.src = bloburl;
        if (img.width > 0) {
            pasted(img);
            URL.revokeObjectURL(bloburl);
        }
        else {
            img.onload = function () { pasted(img); URL.revokeObjectURL(bloburl); };
        }
    };
    reader.readAsArrayBuffer(file);
}


/***/ }),

/***/ "./src/base/rect.ts":
/*!**************************!*\
  !*** ./src/base/rect.ts ***!
  \**************************/
/***/ ((__unused_webpack_module, exports) => {


//util class for rectangle maths
//TODO shit this sucks can we remove it again?
//more of a shorthand to get {x,y,width,height} than a class
//kinda starting to like it again
//TODO remove rant
Object.defineProperty(exports, "__esModule", ({ value: true }));
;
/**
 * Simple rectangle class with some util functions
 */
class Rect {
    constructor(x, y, w, h) {
        this.x = x;
        this.y = y;
        this.width = w;
        this.height = h;
    }
    static fromArgs(...args) {
        if (typeof args[0] == "object") {
            return new Rect(args[0].x, args[0].y, args[0].width, args[0].height);
        }
        else if (typeof args[0] == "number" && args.length >= 4) {
            return new Rect(args[0], args[1], args[2], args[3]);
        }
        else {
            throw new Error("invalid rect args");
        }
    }
    /**
     * Resizes this Rect to include the full size of a given second rectangle
     */
    union(r2) {
        var x = Math.min(this.x, r2.x);
        var y = Math.min(this.y, r2.y);
        this.width = Math.max(this.x + this.width, r2.x + r2.width) - x;
        this.height = Math.max(this.y + this.height, r2.y + r2.height) - y;
        this.x = x;
        this.y = y;
        return this;
    }
    /**
     * Resizes this Rect to include a given point
     */
    includePoint(x, y) {
        this.union(new Rect(x, y, 0, 0));
    }
    /**
     * Grows the rectangle with the given dimensions
     */
    inflate(w, h) {
        this.x -= w;
        this.y -= h;
        this.width += 2 * w;
        this.height += 2 * h;
    }
    /**
     * Resizes this Rect to the area that overlaps a given Rect
     * width and height will be set to 0 if the intersection does not exist
     */
    intersect(r2) {
        if (this.x < r2.x) {
            this.width -= r2.x - this.x;
            this.x = r2.x;
        }
        if (this.y < r2.y) {
            this.height -= r2.y - this.y;
            this.y = r2.y;
        }
        this.width = Math.min(this.x + this.width, r2.x + r2.width) - this.x;
        this.height = Math.min(this.y + this.height, r2.y + r2.height) - this.y;
        if (this.width <= 0 || this.height <= 0) {
            this.width = 0;
            this.height = 0;
        }
    }
    /**
     * Returns wether this Rect has at least one pixel overlap with a given Rect
     */
    overlaps(r2) {
        return this.x < r2.x + r2.width && this.x + this.width > r2.x && this.y < r2.y + r2.height && this.y + this.height > r2.y;
    }
    /**
     * Returns wether a given Rect fits completely inside this Rect
     * @param r2
     */
    contains(r2) {
        return this.x <= r2.x && this.x + this.width >= r2.x + r2.width && this.y <= r2.y && this.y + this.height >= r2.y + r2.height;
    }
    /**
     * Returns wether a given point lies inside this Rect
     */
    containsPoint(x, y) {
        return this.x <= x && this.x + this.width > x && this.y <= y && this.y + this.height > y;
    }
}
exports["default"] = Rect;


/***/ }),

/***/ "./src/base/wrapper.ts":
/*!*****************************!*\
  !*** ./src/base/wrapper.ts ***!
  \*****************************/
/***/ (function(__unused_webpack_module, exports, __nested_webpack_require_56486__) {


var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.captureStream = exports.captureMultiAsync = exports.captureAsync = exports.ImageStreamReader = exports.once = exports.removeListener = exports.on = exports.addResizeElement = exports.getMousePosition = exports.hasAlt1Version = exports.resetEnvironment = exports.identifyApp = exports.unmixColor = exports.mixColor = exports.encodeImageString = exports.decodeImageString = exports.transferImageData = exports.captureHoldFullRs = exports.captureHoldScreen = exports.captureHold = exports.capture = exports.getdisplaybounds = exports.requireAlt1 = exports.openbrowser = exports.skinName = exports.hasAlt1 = exports.newestversion = exports.Alt1Error = exports.NoAlt1Error = void 0;
const rect_1 = __importDefault(__nested_webpack_require_56486__(/*! ./rect */ "./src/base/rect.ts"));
const imgref_1 = __nested_webpack_require_56486__(/*! ./imgref */ "./src/base/imgref.ts");
const imagedata_extensions_1 = __nested_webpack_require_56486__(/*! ./imagedata-extensions */ "./src/base/imagedata-extensions.ts");
__nested_webpack_require_56486__(/*! ./alt1api */ "./src/base/alt1api.ts");
/**
 * Thrown when a method is called that can not be used outside of Alt1
 */
class NoAlt1Error extends Error {
    constructor() {
        super();
        this.message = "This method can not be ran outside of Alt1";
    }
}
exports.NoAlt1Error = NoAlt1Error;
;
/**
 * Thrown when the Alt1 API returns an invalid result
 * Errors of a different type are throw when internal Alt1 errors occur
 */
class Alt1Error extends Error {
}
exports.Alt1Error = Alt1Error;
/**
 * The latest Alt1 version
 */
exports.newestversion = "1.5.5";
/**
 * Whether the Alt1 API is available
 */
exports.hasAlt1 = (typeof alt1 != "undefined");
/**
 * The name of the Alt1 interface skin. (Always "default" if running in a browser)
 */
exports.skinName = exports.hasAlt1 ? alt1.skinName : "default";
/**
 * Max number of bytes that can be sent by alt1 in one function
 * Not completely sure why this number is different than window.alt1.maxtranfer
 */
var maxtransfer = 4000000;
/**
 * Open a link in the default browser
 * @deprecated use window.open instead
 */
function openbrowser(url) {
    if (exports.hasAlt1) {
        alt1.openBrowser(url);
    }
    else {
        window.open(url, '_blank');
    }
}
exports.openbrowser = openbrowser;
/**
 * Throw if Alt1 API is not available
 */
function requireAlt1() {
    if (!exports.hasAlt1) {
        throw new NoAlt1Error();
    }
}
exports.requireAlt1 = requireAlt1;
/**
 * Returns an object with a rectangle that spans all screens
 */
function getdisplaybounds() {
    if (!exports.hasAlt1) {
        return false;
    }
    return new rect_1.default(alt1.screenX, alt1.screenY, alt1.screenWidth, alt1.screenHeight);
}
exports.getdisplaybounds = getdisplaybounds;
/**
 * gets an imagebuffer with pixel data about the requested region
 */
function capture(...args) {
    //TODO change null return on error into throw instead (x3)
    if (!exports.hasAlt1) {
        throw new NoAlt1Error();
    }
    var rect = rect_1.default.fromArgs(...args);
    if (alt1.capture) {
        return new imagedata_extensions_1.ImageData(alt1.capture(rect.x, rect.y, rect.width, rect.height), rect.width, rect.height);
    }
    var buf = new imagedata_extensions_1.ImageData(rect.width, rect.height);
    if (rect.width * rect.height * 4 <= maxtransfer) {
        var data = alt1.getRegion(rect.x, rect.y, rect.width, rect.height);
        if (!data) {
            return null;
        }
        decodeImageString(data, buf, 0, 0, rect.width, rect.height);
    }
    else {
        //split up the request to to exceed the single transfer limit (for now)
        var x1 = rect.x;
        var ref = alt1.bindRegion(rect.x, rect.y, rect.width, rect.height);
        if (ref <= 0) {
            return null;
        }
        while (x1 < rect.x + rect.width) {
            var x2 = Math.min(rect.x + rect.width, Math.floor(x1 + (maxtransfer / 4 / rect.height)));
            var data = alt1.bindGetRegion(ref, x1, rect.y, x2 - x1, rect.height);
            if (!data) {
                return null;
            }
            decodeImageString(data, buf, x1 - rect.x, 0, x2 - x1, rect.height);
            x1 = x2;
        }
    }
    return buf;
}
exports.capture = capture;
/**
 * Makes alt1 bind an area of the rs client in memory without sending it to the js client
 * returns an imgref object which can be used to get pixel data using the imgreftobuf function
 * currently only one bind can exist per app and the ref in (v) will always be 1
 */
function captureHold(x, y, w, h) {
    x = Math.round(x);
    y = Math.round(y);
    w = Math.round(w);
    h = Math.round(h);
    requireAlt1();
    var r = alt1.bindRegion(x, y, w, h);
    if (r <= 0) {
        throw new Alt1Error("capturehold failed");
    }
    return new imgref_1.ImgRefBind(r, x, y, w, h);
}
exports.captureHold = captureHold;
/**
 * Same as captureHoldRegion, but captures the screen instead of the rs client. it also uses screen coordinates instead and can capture outside of the rs client
 */
function captureHoldScreen(x, y, w, h) {
    x = Math.round(x);
    y = Math.round(y);
    w = Math.round(w);
    h = Math.round(h);
    requireAlt1();
    var r = alt1.bindScreenRegion(x, y, w, h);
    if (r <= 0) {
        return false;
    }
    return new imgref_1.ImgRefBind(r, x, y, w, h);
}
exports.captureHoldScreen = captureHoldScreen;
/**
 * bind the full rs window if the rs window can be detected by alt1, otherwise return the full screen
 */
function captureHoldFullRs() {
    return captureHold(0, 0, alt1.rsWidth, alt1.rsHeight);
}
exports.captureHoldFullRs = captureHoldFullRs;
/**
 * returns a subregion from a bound image
 * used internally in imgreftobuf if imgref is a bound image
 * @deprecated This should be handled internall by the imgrefbind.toData method
 */
function transferImageData(handle, x, y, w, h) {
    x = Math.round(x);
    y = Math.round(y);
    w = Math.round(w);
    h = Math.round(h);
    requireAlt1();
    if (alt1.bindGetRegionBuffer) {
        return new imagedata_extensions_1.ImageData(alt1.bindGetRegionBuffer(handle, x, y, w, h), w, h);
    }
    var r = new imagedata_extensions_1.ImageData(w, h);
    var x1 = x;
    while (true) { //split up the request to to exceed the single transfer limit (for now)
        var x2 = Math.min(x + w, Math.floor(x1 + (maxtransfer / 4 / h)));
        var a = alt1.bindGetRegion(handle, x1, y, x2 - x1, h);
        if (!a) {
            throw new Alt1Error();
        }
        decodeImageString(a, r, x1 - x, 0, x2 - x1, h);
        x1 = x2;
        if (x1 == x + w) {
            break;
        }
        ;
    }
    return r;
}
exports.transferImageData = transferImageData;
/**
 * decodes a returned string from alt1 to an imagebuffer
 */
function decodeImageString(imagestring, target, x, y, w, h) {
    var bin = atob(imagestring);
    var bytes = target.data;
    w |= 0;
    h |= 0;
    var offset = 4 * x + 4 * y * target.width;
    var target_width = target.width | 0;
    for (var a = 0; a < w; a++) {
        for (var b = 0; b < h; b++) {
            var i1 = (offset + (a * 4 | 0) + (b * target_width * 4 | 0)) | 0;
            var i2 = ((a * 4 | 0) + (b * 4 * w | 0)) | 0;
            bytes[i1 + 0 | 0] = bin.charCodeAt(i2 + 2 | 0); //fix weird red/blue swap in c#
            bytes[i1 + 1 | 0] = bin.charCodeAt(i2 + 1 | 0);
            bytes[i1 + 2 | 0] = bin.charCodeAt(i2 + 0 | 0);
            bytes[i1 + 3 | 0] = bin.charCodeAt(i2 + 3 | 0);
        }
    }
    return target;
}
exports.decodeImageString = decodeImageString;
/**
 * encodes an imagebuffer to a string
 */
function encodeImageString(buf, sx = 0, sy = 0, sw = buf.width, sh = buf.height) {
    var raw = "";
    for (var y = sy; y < sy + sh; y++) {
        for (var x = sx; x < sx + sw; x++) {
            var i = 4 * x + 4 * buf.width * y | 0;
            raw += String.fromCharCode(buf.data[i + 2 | 0]);
            raw += String.fromCharCode(buf.data[i + 1 | 0]);
            raw += String.fromCharCode(buf.data[i + 0 | 0]);
            raw += String.fromCharCode(buf.data[i + 3 | 0]);
        }
    }
    return btoa(raw);
}
exports.encodeImageString = encodeImageString;
/**
 * mixes the given color into a single int. This format is used by alt1
 */
function mixColor(r, g, b, a = 255) {
    return (b << 0) + (g << 8) + (r << 16) + (a << 24);
}
exports.mixColor = mixColor;
function unmixColor(col) {
    var r = (col >> 16) & 0xff;
    var g = (col >> 8) & 0xff;
    var b = (col >> 0) & 0xff;
    return [r, g, b];
}
exports.unmixColor = unmixColor;
function identifyApp(url) {
    if (exports.hasAlt1) {
        alt1.identifyAppUrl(url);
    }
}
exports.identifyApp = identifyApp;
function resetEnvironment() {
    exports.hasAlt1 = (typeof alt1 != "undefined");
    exports.skinName = exports.hasAlt1 ? alt1.skinName : "default";
}
exports.resetEnvironment = resetEnvironment;
function convertAlt1Version(str) {
    var a = str.match(/^(\d+)\.(\d+)\.(\d+)$/);
    if (!a) {
        throw new RangeError("Invalid version string");
    }
    return (+a[1]) * 1000 * 1000 + (+a[2]) * 1000 + (+a[3]) * 1;
}
var cachedVersionInt = -1;
/**
 * checks if alt1 is running and at least the given version. versionstr should be a string with the version eg: 1.3.2
 * @param versionstr
 */
function hasAlt1Version(versionstr) {
    if (!exports.hasAlt1) {
        return false;
    }
    if (cachedVersionInt == -1) {
        cachedVersionInt = alt1.versionint;
    }
    return cachedVersionInt >= convertAlt1Version(versionstr);
}
exports.hasAlt1Version = hasAlt1Version;
/**
 * Gets the current cursor position in the game, returns null if the rs window is not active (alt1.rsActive)
 */
function getMousePosition() {
    var pos = alt1.mousePosition;
    if (pos == -1) {
        return null;
    }
    return { x: pos >>> 16, y: pos & 0xFFFF };
}
exports.getMousePosition = getMousePosition;
/**
 * Registers a given HTML element as a frame border, when this element is dragged by the user the Alt1 frame will resize accordingly
 * Use the direction arguements to make a given direction stick to the mouse. eg. Only set left to true to make the element behave as the left border
 * Or set all to true to move the whole window. Not all combinations are permitted
 */
function addResizeElement(el, left, top, right, bot) {
    if (!exports.hasAlt1 || !alt1.userResize) {
        return;
    }
    el.addEventListener("mousedown", function (e) {
        alt1.userResize(left, top, right, bot);
        e.preventDefault();
    });
}
exports.addResizeElement = addResizeElement;
/**
 * Add an event listener
 */
function on(type, listener) {
    if (!exports.hasAlt1) {
        return;
    }
    if (!alt1.events) {
        alt1.events = {};
    }
    if (!alt1.events[type]) {
        alt1.events[type] = [];
    }
    alt1.events[type].push(listener);
}
exports.on = on;
/**
 * Removes an event listener
 */
function removeListener(type, listener) {
    var elist = exports.hasAlt1 && alt1.events && alt1.events[type];
    if (!elist) {
        return;
    }
    var i = elist.indexOf(listener);
    if (i == -1) {
        return;
    }
    elist.splice(i, 1);
}
exports.removeListener = removeListener;
/**
 * Listens for the event to fire once and then stops listening
 * @param event
 * @param cb
 */
function once(type, listener) {
    var fn = (e) => {
        removeListener(type, fn);
        listener(e);
    };
    on(type, fn);
}
exports.once = once;
;
/**
 * Used to read a set of images from a binary stream returned by the Alt1 API
 */
class ImageStreamReader {
    constructor(reader, ...args) {
        this.framebuffer = null;
        this.pos = 0;
        this.reading = false;
        this.closed = false;
        //paused state
        this.pausedindex = -1;
        this.pausedbuffer = null;
        this.streamreader = reader;
        if (args[0] instanceof imagedata_extensions_1.ImageData) {
            this.setFrameBuffer(args[0]);
        }
        else if (typeof args[0] == "number") {
            this.setFrameBuffer(new imagedata_extensions_1.ImageData(args[0], args[1]));
        }
    }
    /**
     *
     */
    setFrameBuffer(buffer) {
        if (this.reading) {
            throw new Error("can't change framebuffer while reading");
        }
        this.framebuffer = buffer;
    }
    /**
     * Closes the underlying stream and ends reading
     */
    close() {
        this.streamreader.cancel();
    }
    /**
     * Reads a single image from the stream
     */
    async nextImage() {
        if (this.reading) {
            throw new Error("already reading from this stream");
        }
        if (!this.framebuffer) {
            throw new Error("framebuffer not set");
        }
        this.reading = true;
        var synctime = -Date.now();
        var starttime = Date.now();
        var r = false;
        while (!r) {
            if (this.pausedindex != -1 && this.pausedbuffer) {
                r = this.readChunk(this.pausedindex, this.framebuffer.data, this.pausedbuffer);
            }
            else {
                synctime += Date.now();
                var res = await this.streamreader.read();
                synctime -= Date.now();
                if (res.done) {
                    throw new Error("Stream closed while reading");
                }
                var data = res.value;
                r = this.readChunk(0, this.framebuffer.data, data);
            }
        }
        synctime += Date.now();
        //console.log("Decoded async image, " + this.framebuffer.width + "x" + this.framebuffer.height + " time: " + (Date.now() - starttime) + "ms (" + synctime + "ms main thread)");
        this.reading = false;
        return this.framebuffer;
    }
    readChunk(i, framedata, buffer) {
        //very hot code, explicit int32 casting with |0 speeds it up by ~ x2
        i = i | 0;
        var framesize = framedata.length | 0;
        var pos = this.pos;
        var datalen = buffer.length | 0;
        //var data32 = new Float64Array(buffer.buffer);
        //var framedata32 = new Float64Array(framedata.buffer);
        //fix possible buffer misalignment
        //align to 16 for extra loop unrolling
        while (i < datalen) {
            //slow loop, fix alignment and other issues
            while (i < datalen && pos < framesize && (pos % 16 != 0 || !((i + 16 | 0) <= datalen && (pos + 16 | 0) <= framesize))) {
                var rel = pos;
                if (pos % 4 == 0) {
                    rel = rel + 2 | 0;
                }
                if (pos % 4 == 2) {
                    rel = rel - 2 | 0;
                }
                framedata[rel | 0] = buffer[i | 0];
                i = i + 1 | 0;
                pos = pos + 1 | 0;
            }
            //fast unrolled loop for large chunks i wish js had some sort of memcpy
            if (pos % 16 == 0) {
                while ((i + 16 | 0) <= datalen && (pos + 16 | 0) <= framesize) {
                    framedata[pos + 0 | 0] = buffer[i + 2 | 0];
                    framedata[pos + 1 | 0] = buffer[i + 1 | 0];
                    framedata[pos + 2 | 0] = buffer[i + 0 | 0];
                    framedata[pos + 3 | 0] = buffer[i + 3 | 0];
                    framedata[pos + 4 | 0] = buffer[i + 6 | 0];
                    framedata[pos + 5 | 0] = buffer[i + 5 | 0];
                    framedata[pos + 6 | 0] = buffer[i + 4 | 0];
                    framedata[pos + 7 | 0] = buffer[i + 7 | 0];
                    framedata[pos + 8 | 0] = buffer[i + 10 | 0];
                    framedata[pos + 9 | 0] = buffer[i + 9 | 0];
                    framedata[pos + 10 | 0] = buffer[i + 8 | 0];
                    framedata[pos + 11 | 0] = buffer[i + 11 | 0];
                    framedata[pos + 12 | 0] = buffer[i + 14 | 0];
                    framedata[pos + 13 | 0] = buffer[i + 13 | 0];
                    framedata[pos + 14 | 0] = buffer[i + 12 | 0];
                    framedata[pos + 15 | 0] = buffer[i + 15 | 0];
                    //could speed it up another x2 but wouldn't be able to swap r/b swap and possible alignment issues
                    //framedata32[pos / 8 + 0 | 0] = data32[i / 8 + 0 | 0];
                    //framedata32[pos / 8 + 1 | 0] = data32[i / 8 + 1 | 0];
                    //framedata32[pos / 4 + 2 | 0] = data32[i / 4 + 2 | 0];
                    //framedata32[pos / 4 + 3 | 0] = data32[i / 4 + 3 | 0];
                    pos = pos + 16 | 0;
                    i = i + 16 | 0;
                }
            }
            if (pos >= framesize) {
                this.pausedbuffer = null;
                this.pausedindex = -1;
                this.pos = 0;
                if (i != buffer.length - 1) {
                    this.pausedbuffer = buffer;
                    this.pausedindex = i;
                }
                return true;
            }
        }
        this.pos = pos;
        this.pausedbuffer = null;
        this.pausedindex = -1;
        return false;
    }
}
exports.ImageStreamReader = ImageStreamReader;
/**
 * Asynchronously captures a section of the game screen
 */
async function captureAsync(...args) {
    requireAlt1();
    var rect = rect_1.default.fromArgs(...args);
    if (alt1.captureAsync) {
        let img = await alt1.captureAsync(rect.x, rect.y, rect.width, rect.height);
        return new imagedata_extensions_1.ImageData(img, rect.width, rect.height);
    }
    if (!hasAlt1Version("1.4.6")) {
        return capture(rect.x, rect.y, rect.width, rect.height);
    }
    var url = "https://alt1api/pixel/getregion/" + encodeURIComponent(JSON.stringify(Object.assign(Object.assign({}, rect), { format: "raw", quality: 1 })));
    var res = await fetch(url);
    var imgreader = new ImageStreamReader(res.body.getReader(), rect.width, rect.height);
    return imgreader.nextImage();
}
exports.captureAsync = captureAsync;
/**
 * Asynchronously captures multple area's. This method captures the images in the same render frame if possible
 * @param areas
 */
async function captureMultiAsync(areas) {
    requireAlt1();
    var r = {};
    if (alt1.captureMultiAsync) {
        let bufs = await alt1.captureMultiAsync(areas);
        for (let a in areas) {
            if (!bufs[a]) {
                r[a] = null;
            }
            r[a] = new imagedata_extensions_1.ImageData(bufs[a], areas[a].width, areas[a].height);
        }
        return r;
    }
    var capts = [];
    var captids = [];
    for (var id in areas) {
        if (areas[id]) {
            capts.push(areas[id]);
            captids.push(id);
        }
        else {
            r[id] = null;
        }
    }
    if (capts.length == 0) {
        return r;
    }
    if (!hasAlt1Version("1.5.1")) {
        var proms = [];
        for (var a = 0; a < capts.length; a++) {
            proms.push(captureAsync(capts[a]));
        }
        var results = await Promise.all(proms);
        for (var a = 0; a < capts.length; a++) {
            r[captids[a]] = results[a];
        }
    }
    else {
        var res = await fetch("https://alt1api/pixel/getregionmulti/" + encodeURIComponent(JSON.stringify({ areas: capts, format: "raw", quality: 1 })));
        var imgreader = new ImageStreamReader(res.body.getReader());
        for (var a = 0; a < capts.length; a++) {
            var capt = capts[a];
            imgreader.setFrameBuffer(new imagedata_extensions_1.ImageData(capt.width, capt.height));
            r[captids[a]] = await imgreader.nextImage();
        }
    }
    return r;
}
exports.captureMultiAsync = captureMultiAsync;
/**
 * Starts capturing a realtime stream of the game. Make sure you keep reading the stream and close it when you're done or Alt1 WILL crash
 * @param framecb Called whenever a new frame is decoded
 * @param errorcb Called whenever an error occurs, the error is rethrown if not defined
 * @param fps Maximum fps of the stream
 */
function captureStream(x, y, width, height, fps, framecb, errorcb) {
    requireAlt1();
    if (!hasAlt1Version("1.4.6")) {
        throw new Alt1Error("This function is not supported in this version of Alt1");
    }
    var url = "https://alt1api/pixel/streamregion/" + encodeURIComponent(JSON.stringify({ x, y, width, height, fps, format: "raw" }));
    var res = fetch(url).then(async (res) => {
        var reader = new ImageStreamReader(res.body.getReader(), width, height);
        try {
            while (!reader.closed && !state.closed) {
                var img = await reader.nextImage();
                if (!state.closed) {
                    framecb(img);
                    state.framenr++;
                }
            }
        }
        catch (e) {
            if (!state.closed) {
                reader.close();
                if (errorcb) {
                    errorcb(e);
                }
                else {
                    throw e;
                }
            }
        }
        if (!reader.closed && state.closed) {
            reader.close();
        }
    });
    var state = {
        x, y, width, height,
        framenr: 0,
        close: () => { state.closed = true; },
        closed: false,
    };
    return state;
}
exports.captureStream = captureStream;


/***/ }),

/***/ "canvas":
/*!*************************!*\
  !*** external "canvas" ***!
  \*************************/
/***/ ((module) => {

if(typeof __WEBPACK_EXTERNAL_MODULE_canvas__ === 'undefined') { var e = new Error("Cannot find module 'canvas'"); e.code = 'MODULE_NOT_FOUND'; throw e; }

module.exports = __WEBPACK_EXTERNAL_MODULE_canvas__;

/***/ }),

/***/ "electron/common":
/*!**********************************!*\
  !*** external "electron/common" ***!
  \**********************************/
/***/ ((module) => {

if(typeof __WEBPACK_EXTERNAL_MODULE_electron_common__ === 'undefined') { var e = new Error("Cannot find module 'electron/common'"); e.code = 'MODULE_NOT_FOUND'; throw e; }

module.exports = __WEBPACK_EXTERNAL_MODULE_electron_common__;

/***/ }),

/***/ "sharp":
/*!************************!*\
  !*** external "sharp" ***!
  \************************/
/***/ ((module) => {

if(typeof __WEBPACK_EXTERNAL_MODULE_sharp__ === 'undefined') { var e = new Error("Cannot find module 'sharp'"); e.code = 'MODULE_NOT_FOUND'; throw e; }

module.exports = __WEBPACK_EXTERNAL_MODULE_sharp__;

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __nested_webpack_require_79245__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __nested_webpack_require_79245__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/global */
/******/ 	(() => {
/******/ 		__nested_webpack_require_79245__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module is referenced by other modules so it can't be inlined
/******/ 	var __nested_webpack_exports__ = __nested_webpack_require_79245__("./src/base/index.ts");
/******/ 	
/******/ 	return __nested_webpack_exports__;
/******/ })()
;
});

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
// This entry need to be wrapped in an IIFE because it need to be in strict mode.
(() => {
"use strict";
/*!******************!*\
  !*** ./index.ts ***!
  \******************/
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var alt1__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! alt1 */ "../node_modules/alt1/dist/base/index.js");
/* harmony import */ var alt1__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(alt1__WEBPACK_IMPORTED_MODULE_0__);
var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (undefined && undefined.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === "function" ? Iterator : Object).prototype);
    return g.next = verb(0), g["throw"] = verb(1), g["return"] = verb(2), typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};

// Constants
var NUM_PRESETS = 18;
var DISABLED_PRESETS_URL = "./images/disabled-presets.png";
var DEFAULT_IMAGE_URL = "./images/icon.png";
var DEFAULT_IMAGE_WIDTH = 420;
var DEFAULT_IMAGE_HEIGHT = 550;
// Load base images with webpack
var imgs = alt1__WEBPACK_IMPORTED_MODULE_0__.webpackImages({
    RS3_bank_presets: __webpack_require__(/*! ./images/data/bank/RS3_presets.data.png */ "./images/data/bank/RS3_presets.data.png"),
    RS3_disabled_preset: __webpack_require__(/*! ./images/data/bank/RS3_disabled_preset.data.png */ "./images/data/bank/RS3_disabled_preset.data.png"),
    OS3_bank_presets: __webpack_require__(/*! ./images/data/bank/OS3_presets.data.png */ "./images/data/bank/OS3_presets.data.png"),
    OS3_disabled_preset: __webpack_require__(/*! ./images/data/bank/OS3_disabled_preset.data.png */ "./images/data/bank/OS3_disabled_preset.data.png"),
});
// Load in RS3 Preset Images
var RS3_preset_imgs = {};
for (var i = 1; i <= 18; i++)
    RS3_preset_imgs["preset_".concat(i.toString().padStart(2, '0'))] = __webpack_require__("./images/data/buttons sync recursive ^\\.\\/RS3_preset_.*\\.data\\.png$")("./RS3_preset_".concat(i.toString().padStart(2, '0'), ".data.png"));
RS3_preset_imgs = alt1__WEBPACK_IMPORTED_MODULE_0__.webpackImages(RS3_preset_imgs);
// Load in OS3 Preset Images
var OS3_preset_imgs = {};
for (var i = 1; i <= 18; i++)
    OS3_preset_imgs["preset_".concat(i.toString().padStart(2, '0'))] = __webpack_require__("./images/data/buttons sync recursive ^\\.\\/OS3_preset_.*\\.data\\.png$")("./OS3_preset_".concat(i.toString().padStart(2, '0'), ".data.png"));
OS3_preset_imgs = alt1__WEBPACK_IMPORTED_MODULE_0__.webpackImages(OS3_preset_imgs);
// Check if running inside Alt1
if (window.alt1) {
    alt1.identifyAppUrl("./appconfig.json");
}
else {
    document.getElementById("addtoalt1").style.display = "block";
}
// Initialize the app
document.addEventListener("DOMContentLoaded", initializeApp);
function initializeApp() {
    return __awaiter(this, void 0, void 0, function () {
        var error_1;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    _a.trys.push([0, 4, , 5]);
                    if (!window.alt1) return [3 /*break*/, 3];
                    if (!!alt1.permissionInstalled) return [3 /*break*/, 1];
                    document.getElementById("addtoalt1").style.display = "block";
                    document.getElementById("addtoalt1").innerHTML = "You should click <a href='https://presetify.unlishema.org'>Add App</a> at top right";
                    return [3 /*break*/, 3];
                case 1: return [4 /*yield*/, setupDefaultImages()];
                case 2:
                    _a.sent();
                    setupEventListeners();
                    setInterval(loop, 100);
                    _a.label = 3;
                case 3: return [3 /*break*/, 5];
                case 4:
                    error_1 = _a.sent();
                    console.error("Initialization error:", error_1);
                    return [3 /*break*/, 5];
                case 5: return [2 /*return*/];
            }
        });
    });
}
function setupDefaultImages() {
    return __awaiter(this, void 0, void 0, function () {
        var disabledPresets, defaultImage, i, preset;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0: return [4 /*yield*/, convertImageToBase64(DISABLED_PRESETS_URL)];
                case 1:
                    disabledPresets = _a.sent();
                    if (!localStorage.getItem("disabled-presets"))
                        localStorage.setItem("disabled-presets", disabledPresets);
                    return [4 /*yield*/, convertImageToBase64(DEFAULT_IMAGE_URL)];
                case 2:
                    defaultImage = _a.sent();
                    for (i = 1; i <= NUM_PRESETS; i++) {
                        preset = "preset-".concat(String(i).padStart(2, '0'));
                        if (!localStorage.getItem(preset))
                            localStorage.setItem(preset, defaultImage);
                    }
                    return [2 /*return*/];
            }
        });
    });
}
function setupEventListeners() {
    document.getElementById("menubutton").addEventListener("click", function () {
        openSettings();
        console.log("Open Settings!");
    });
}
function loop() {
    if (!window.alt1 || !alt1.permissionInstalled || !alt1.permissionOverlay || !alt1.rsActive)
        return;
    var buffer = alt1__WEBPACK_IMPORTED_MODULE_0__.captureHoldFullRs();
    checkForPresets(buffer, imgs.RS3_bank_presets);
    checkForPresets(buffer, imgs.OS3_bank_presets);
}
function checkForPresets(buffer, bankImage) {
    var pos = buffer.findSubimage(bankImage);
    if (pos && pos.length > 0)
        for (var _i = 0, pos_1 = pos; _i < pos_1.length; _i++) {
            var location_1 = pos_1[_i];
            var disabled_img = bankImage === imgs.RS3_bank_presets ? imgs.RS3_disabled_preset : imgs.OS3_disabled_preset;
            var preset_imgs = bankImage === imgs.RS3_bank_presets ? RS3_preset_imgs : OS3_preset_imgs;
            // Show disabled preset icons
            if (disabled_img) {
                var presetImageData = localStorage.getItem("disabled-presets"); // Load from base64 image in localStorage
                var disabledPos = buffer.findSubimage(disabled_img, location_1.x, location_1.y, bankImage.width, bankImage.height);
                if (disabledPos && disabledPos.length > 0) {
                    var _loop_1 = function (match) {
                        generateOverlay(presetImageData, function (ctx, canvas) {
                            var imageString = alt1__WEBPACK_IMPORTED_MODULE_0__.encodeImageString(ctx.getImageData(0, 0, canvas.width, canvas.height));
                            alt1.overLayImage(match.x, match.y, imageString, 30, 300);
                        });
                    };
                    for (var _a = 0, disabledPos_1 = disabledPos; _a < disabledPos_1.length; _a++) {
                        var match = disabledPos_1[_a];
                        _loop_1(match);
                    }
                }
            }
            // Loop through all 18 preset images and set them as the settings allow
            if (preset_imgs)
                for (var key in preset_imgs) {
                    var presetImageData = localStorage.getItem(key.replace("_", "-")); // Load from base64 image in localStorage
                    if (presetImageData) {
                        var presetPos = buffer.findSubimage(preset_imgs[key], location_1.x, location_1.y, bankImage.width, bankImage.height);
                        if (presetPos && presetPos.length > 0) {
                            var _loop_2 = function (match) {
                                generateOverlay(presetImageData, function (ctx, canvas) {
                                    var imageString = alt1__WEBPACK_IMPORTED_MODULE_0__.encodeImageString(ctx.getImageData(0, 0, canvas.width, canvas.height));
                                    alt1.overLayImage(match.x, match.y, imageString, 30, 300);
                                });
                            };
                            for (var _b = 0, presetPos_1 = presetPos; _b < presetPos_1.length; _b++) {
                                var match = presetPos_1[_b];
                                _loop_2(match);
                            }
                        }
                    }
                    else
                        console.warn("No image data found for [".concat(key, "]"));
                }
        }
}
function generateOverlay(imgBase64, f) {
    var img = new Image();
    img.src = imgBase64; // Set the source to the base64 string
    img.onload = function () {
        var canvas = document.createElement('canvas');
        var targetWidth = 30; // Set to the desired width
        var targetHeight = (img.height / img.width) * targetWidth; // Maintain aspect ratio
        canvas.width = targetWidth;
        canvas.height = targetHeight;
        var ctx = canvas.getContext('2d');
        if (ctx) {
            ctx.drawImage(img, 0, 0, targetWidth, targetHeight); // Scale the image
            var imageData = ctx.getImageData(0, 0, canvas.width, canvas.height); // Get ImageData
            f(ctx, canvas);
        }
    };
}
function openSettings() {
    var left = window.screenX + (window.innerWidth / 2) - (DEFAULT_IMAGE_WIDTH / 2);
    var top = window.screenY + (window.innerHeight / 2) - (DEFAULT_IMAGE_HEIGHT / 2);
    var settingsWindow = window.open("./settings.html", "_blank", "width=".concat(DEFAULT_IMAGE_WIDTH, ",height=").concat(DEFAULT_IMAGE_HEIGHT, ",left=").concat(left, ",top=").concat(top));
    settingsWindow === null || settingsWindow === void 0 ? void 0 : settingsWindow.addEventListener('keyup', function (e) {
        if ((e.which || e.keyCode) === 116) {
            e.preventDefault(); // Prevent F5 key press from refreshing the page
        }
    });
}
function convertImageToBase64(url) {
    return __awaiter(this, void 0, void 0, function () {
        var response, blob_1, error_2;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    _a.trys.push([0, 3, , 4]);
                    return [4 /*yield*/, fetch(url)];
                case 1:
                    response = _a.sent();
                    return [4 /*yield*/, response.blob()];
                case 2:
                    blob_1 = _a.sent();
                    return [2 /*return*/, new Promise(function (resolve, reject) {
                            var reader = new FileReader();
                            reader.onloadend = function () { return resolve(reader.result); };
                            reader.onerror = reject;
                            reader.readAsDataURL(blob_1);
                        })];
                case 3:
                    error_2 = _a.sent();
                    console.error("Error converting image to Base64:", error_2);
                    return [2 /*return*/, null];
                case 4: return [2 /*return*/];
            }
        });
    });
}

})();

/******/ 	return __webpack_exports__;
/******/ })()
;
});